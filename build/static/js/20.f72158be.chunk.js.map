{"version":3,"sources":["components/headerLink.tsx","article/关于array的几个API.js"],"names":["Main","clickPosBtn","idName","dom","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","headerLink","map","item","index","level","key","onClick","title","React","Component","Template","_this","Object","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5__","_components_headerLink__WEBPACK_IMPORTED_MODULE_7__","id","target","href"],"mappings":"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","file":"static/js/20.f72158be.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/components/headerLink.scss\"\nexport default class Main extends React.Component<any, any>{\n    componentDidMount() { }\n\n    clickPosBtn = (idName: string) => {\n        const dom: any = document.getElementById(idName);\n        window.scrollTo({\n            top: dom.offsetTop - 10,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"headerLink\">\n                <div className=\"content\">\n                    <div className=\"real-content\">\n                        <div className='tag'>Reading Assistance ·</div>\n                        {\n                            this.props.headerLink.map((item: any, index: number) => {\n                                return <span className={'a' + item.level} key={index} onClick={() => this.clickPosBtn(item.title)}>{item.title}</span>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Fragment } from 'react'\nimport '../style/main.scss'\nimport HeaderLink from \"../components/headerLink\"\nexport default class Template extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            headerLink: [{\"level\":\"h3\",\"title\":\"Array.prototype.map\"},{\"level\":\"h3\",\"title\":\"Array.prototype.forEach\"},{\"level\":\"h3\",\"title\":\"Array.prototype.Filter\"},{\"level\":\"h3\",\"title\":\"Array.prototype.Sort\"},{\"level\":\"h3\",\"title\":\"Array.prototype.Some\"},{\"level\":\"h3\",\"title\":\"Array.prototype.Every\"},{\"level\":\"h3\",\"title\":\"Array.prototype.FindIndex\"},{\"level\":\"h3\",\"title\":\"Array.prototype.Find\"},{\"level\":\"h3\",\"title\":\"Array.prototype.Reduce\"},{\"level\":\"h3\",\"title\":\"Array.prototype.reduceRight\"},{\"level\":\"h3\",\"title\":\"Array.prototype.includes(ES6新增)\"},{\"level\":\"h3\",\"title\":\"Array.isArray(ES6新增)\"},{\"level\":\"h3\",\"title\":\"Array.prototype.fill(ES6新增)\"},{\"level\":\"h3\",\"title\":\"Array.prototype.entries/keys/values(ES6新增)\"},{\"level\":\"h3\",\"title\":\"Array.of(ES6新增)\"},{\"level\":\"h3\",\"title\":\"Array.from\"},{\"level\":\"h3\",\"title\":\"参考\"}]\n        }\n    }\n    componentWillMount(){\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n            <Fragment>\n                <HeaderLink headerLink={this.state.headerLink}></HeaderLink>\n                <div className=\"article\">\n<div className=\"title-content\"><h1 className=\"title\">关于array的常用的几个API</h1></div>\n<h3 id='Array.prototype.map'>Array.prototype.map</h3>\n\n<ul>\n<li>新建一个数组，需要有承载对象,原始数组在调用它后不会发生变化</li>\n<li>该数组中的每个元素都调用一个提供的函数后返回结果,否则返回 undefined</li>\n</ul>\n\n<p>对于map函数的底层实现，源码核心主要是利用<code>while</code>循环执行<code>callback</code>函数，将函数返回值放入数组即可。大概实现如下：</p>\n\n<pre><code><span></span>\n<span>Array.prototype.map = function (callbackfn, thisArg) {'{'}</span>\n<span>    // 异常处理</span>\n<span>    if (this == null) {'{'}</span>\n<span>        throw new TypeError(\"Cannot read property 'map' of null or undefined\");</span>\n<span>    }</span>\n<span>    // callbackfn 不是函数时抛出异常</span>\n<span>    if (typeof callbackfn !== 'function') {'{'}</span>\n<span>        throw new TypeError(callbackfn + ' is not a function')</span>\n<span>    }</span>\n<span>    // 调用 map 方法的原数组，以键值对形式</span>\n<span>    let O = Object(this) </span>\n<span>    let len = O.length</span>\n<span>    // 执行 callback 时的this</span>\n<span>    let T = thisArg </span>\n<span>    // 要返回的数组</span>\n<span>    let A = new Array(len) </span>\n<span>    // 计数器</span>\n<span>    let k = 0 </span>\n<span>    while (k &lt; len) {'{'}</span>\n<span>        let kValue = O[k]</span>\n<span>        // 传入 this, 当前元素 element, 索引 index, 原数组对象 O</span>\n<span>        let mappedValue = callbackfn.call(T, kValue, k, O)</span>\n<span>        // 返回结果赋值给新生成数组</span>\n<span>        A[k] = mappedValue</span>\n<span>        k++</span>\n<span>    }</span>\n<span>    // 返回新数组</span>\n<span>    return A</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p>通过源码我们可以发现，循环体并不是在<code>callbackfn</code>内，所以不能在<code>callbackfn</code>内设置<code>break</code>、<code>continue</code>和<code>return</code>来跳出循环。同时<code>callbackfn</code>也不能写成<code>async fuction</code>的形式，后果是会立刻执行循环而不是等待每次函数的<code>await</code>结束以后再执行下一次循环。</p>\n\n<p>对于其他API的源码实现，下面就不一一列举了，大致上和<code>map</code>的实现很类似，只不过是在循环体里面需要做各自不同的逻辑。</p>\n\n<h3 id='Array.prototype.forEach'>Array.prototype.forEach</h3>\n\n<ul>\n<li>可以改变数组自身，没有返回值；</li>\n<li>中途不能用常规操作跳出循环，可以用抛出异常（try/catch）的方式，但不推荐这样做</li>\n</ul>\n\n<h3 id='Array.prototype.Filter'>Array.prototype.Filter</h3>\n\n<ul>\n<li>和 map 很像，也是创建一个新数组，新数组中的元素是筛选出来的符合条件的所有对象。</li>\n</ul>\n\n<h3 id='Array.prototype.Sort'>Array.prototype.Sort</h3>\n\n<ul>\n<li>默认按照字母升序排列</li>\n<li>与其他方法不同，他直接改变原始数组</li>\n<li>sort()用于对数组的元素进行排序。排序顺序可以是字母或数字，并按升序或降序。</li>\n<li>如果想按照其他标准进行排序，就需提供比较函数compareFunction(a,b)</li>\n</ul>\n\n<h3 id='Array.prototype.Some'>Array.prototype.Some</h3>\n\n<ul>\n<li>用于检查数组中是否有某些符合条件</li>\n<li>只要有一个满足即返回true，之后的不再执行</li>\n<li>只是返回一个布尔类型的值</li>\n</ul>\n\n<h3 id='Array.prototype.Every'>Array.prototype.Every</h3>\n\n<ul>\n<li>和 some 类似，只返回布尔类型</li>\n<li>判断数组中所有的值是否都满足</li>\n</ul>\n\n<h3 id='Array.prototype.FindIndex'>Array.prototype.FindIndex</h3>\n\n<ul>\n<li>结构和map类似，获取到满足条件的索引值</li>\n<li>IE 11 及更早版本不支持findIndex() 方法，如果对浏览器兼容有要求，那就用Lodash的 _.findIndex()</li>\n</ul>\n\n<h3 id='Array.prototype.Find'>Array.prototype.Find</h3>\n\n<ul>\n<li>和some类似，有一个满足的元素就会返回该元素，而不是布尔值</li>\n<li>IE 11 及更早版本不支持</li>\n</ul>\n\n<h3 id='Array.prototype.Reduce'>Array.prototype.Reduce</h3>\n\n<p>该方法对数组中的每个元素执行一个由您提供的reducer函数(升序执行)，将其结果汇总为单个返回值。reducer函数对应四个传参，依次是：<code>accumulator 累计器</code>, <code>currentValue 当前值</code>, <code>currentIndex 当前索引</code>, <code>array 数组</code>。同时注意</p>\n\n<pre><code><span></span>\n<span></span>\n<span>const array1 = [1, 2, 3, 4];</span>\n<span>const reducer = (accumulator, currentValue) =&gt; accumulator + currentValue;</span>\n<span></span>\n<span>// 1 + 2 + 3 + 4</span>\n<span>console.log(array*reduce(reducer));</span>\n<span>// expected output: 10</span>\n<span></span>\n</code></pre>\n\n<p>需要注意，reduce 可选传入第二个参数，作为第一次调用 callback函数时的第一个参数的值。 如果没有提供初始值，则将使用数组中的第一个元素。</p>\n\n<pre><code><span></span>\n<span>const arr = [1, 2, 3, 4, 5]</span>\n<span>const reducer = (accumulator, currentValue, index) =&gt; {'{'}</span>\n<span>    console.log(accumulator, currentValue, index)</span>\n<span>    return accumulator + currentValue</span>\n<span>}</span>\n<span>&lt;!-- 没有传初始参数值 --&gt;</span>\n<span>arr.reduce(reducer)</span>\n<span>// 1 2 1</span>\n<span>// 3 3 2</span>\n<span>// 6 4 3</span>\n<span>// 10 5 4</span>\n<span></span>\n<span>&lt;!-- 传入初始参数值 --&gt;</span>\n<span>arr.reduce(reducer)</span>\n<span>// -1 1 0</span>\n<span>// 0 2 1</span>\n<span>// 2 3 2</span>\n<span>// 5 4 3</span>\n<span>// 9 5 4</span>\n<span></span>\n</code></pre>\n\n<h3 id='Array.prototype.reduceRight'>Array.prototype.reduceRight</h3>\n\n<p>和 reduce 作用一样，区别是从数组最右开始降序执行。</p>\n\n<h3 id='Array.prototype.includes(ES6新增)'>Array.prototype.includes(ES6新增)</h3>\n\n<p>用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回false。<br></br>第二个参数表示从第几个索引值开始查找。</p>\n\n<pre><code><span></span>\n<span>[1,2,3].includes(3) </span>\n<span>// true</span>\n<span>[1,2,3].includes(4) </span>\n<span>// false</span>\n<span></span>\n<span></span>\n<span>[1,2,3,4].includes(1,1)</span>\n<span>// false</span>\n<span></span>\n</code></pre>\n\n<h3 id='Array.isArray(ES6新增)'>Array.isArray(ES6新增)</h3>\n\n<p>用来检测值是否是一个Array，返回一个布尔类型的值。 相较于 <code>instanceof</code>, Array.isArray 可以检测 iframes。</p>\n\n<pre><code><span></span>\n<span>Array.isArray([1, 2, 3]);  </span>\n<span>// true</span>\n<span>Array.isArray({'{'}foo: 123}); </span>\n<span>// false</span>\n<span></span>\n</code></pre>\n\n<h3 id='Array.prototype.fill(ES6新增)'>Array.prototype.fill(ES6新增)</h3>\n\n<p>用一个固定值填充一个数组中从起始索引到终止索引内的全部元素。不包括终止索引。</p>\n\n<pre><code><span></span>\n<span>[0,1,2,3,4,5,6].fill('*',1,5)</span>\n<span>// [0, \"*\", \"*\", \"*\", \"*\", 5, 6]</span>\n<span></span>\n<span>[0,1,2,3,4,5,6].fill('*')</span>\n<span>// [0, \"*\", \"*\", \"*\", \"*\",\"*\",\"*\"]</span>\n<span></span>\n</code></pre>\n\n<h3 id='Array.prototype.entries/keys/values(ES6新增)'>Array.prototype.entries/keys/values(ES6新增)</h3>\n\n<pre><code><span></span>\n<span>let arr=['a', 'b', 'c']</span>\n<span></span>\n<span>//取键</span>\n<span>for(let key of arr.keys()){'{'}}  </span>\n<span></span>\n<span>//取值；不能直接使用，有兼容性问题，甚至谷歌</span>\n<span>for(let value of arr.values()){'{'}}         </span>\n<span></span>\n<span>//都取</span>\n<span>for(let [key, value] of arr.entries()){'{'}}      </span>\n<span></span>\n</code></pre>\n\n<h3 id='Array.of(ES6新增)'>Array.of(ES6新增)</h3>\n\n<p>创建一个具有可变数量参数的新数组实例，而不考虑参数的数量或类型。</p>\n\n<pre><code><span></span>\n<span>Array.of(7);       // [7] </span>\n<span>Array.of(1, 2, 3); // [1, 2, 3]</span>\n<span></span>\n<span>Array(7);          // [ , , , , , , ]</span>\n<span>Array(1, 2, 3);    // [1, 2, 3]</span>\n<span></span>\n</code></pre>\n\n<h3 id='Array.from'>Array.from</h3>\n\n<p>从一个类似数组或可迭代对象中创建一个新的，浅拷贝的数组实例</p>\n\n<pre><code><span></span>\n<span>Array.from('foo')</span>\n<span>// output: Array [\"f\", \"o\", \"o\"]</span>\n<span></span>\n<span>Array.from([1, 2, 3], x =&gt; x + x)</span>\n<span>// output: Array [2, 4, 6]</span>\n<span></span>\n<span>Array.from({'{'}length: 10}, (_, i) =&gt; i)</span>\n<span>// output: Array [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<h3 id='参考'>参考</h3>\n\n<p><a target=\"_blank\" href=\"https://juejin.im/post/5d76f08ef265da03970be192\">Array 原型方法源码实现大揭秘</a></p>\n</div>\n            </Fragment>\n        )\n    }\n}"],"sourceRoot":""}