{"version":3,"sources":["components/headerLink.tsx","article/VUE核心原理解析.js"],"names":["Main","clickPosBtn","idName","dom","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","headerLink","map","item","index","level","key","onClick","title","React","Component","Template","_this","Object","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5__","_components_headerLink__WEBPACK_IMPORTED_MODULE_7__","id","src","alt"],"mappings":"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","file":"static/js/11.d879bc64.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/components/headerLink.scss\"\nexport default class Main extends React.Component<any, any>{\n    componentDidMount() { }\n\n    clickPosBtn = (idName: string) => {\n        const dom: any = document.getElementById(idName);\n        window.scrollTo({\n            top: dom.offsetTop - 10,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"headerLink\">\n                <div className=\"content\">\n                    <div className=\"real-content\">\n                        <div className='tag'>Reading Assistance ·</div>\n                        {\n                            this.props.headerLink.map((item: any, index: number) => {\n                                return <span className={'a' + item.level} key={index} onClick={() => this.clickPosBtn(item.title)}>{item.title}</span>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Fragment } from 'react'\nimport '../style/main.scss'\nimport HeaderLink from \"../components/headerLink\"\nexport default class Template extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            headerLink: [{\"level\":\"h2\",\"title\":\"运行机制\"},{\"level\":\"h2\",\"title\":\"响应式绑定\"},{\"level\":\"h4\",\"title\":\"Object.defineProperty\"},{\"level\":\"h3\",\"title\":\"依赖收集\"}]\n        }\n    }\n    componentWillMount(){\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n            <Fragment>\n                <HeaderLink headerLink={this.state.headerLink}></HeaderLink>\n                <div className=\"article\">\n<div className=\"title-content\"><h1 className=\"title\">VUE核心原理解析</h1></div>\n<blockquote>\n  <p>众所周知，VUE 是目前一款很流行专注于视图层、用于构建用户交互界面的响应式渐进框架。在使用 VUE 框架大力缩减了开发成本的同时，是否有想过VUE是如何实现双向绑定的？计算属性、监听器等方法又是如何实现的？带着一系列的疑问，就开始这篇解析吧。</p>\n</blockquote>\n\n<h2 id='运行机制'>运行机制</h2>\n\n<p><img src=\"http://p70gzm2sm.bkt.clouddn.com/1606e7eaa2a664e8.jpg\" alt=\"image\" title=\"\" /></p>\n\n<p>如上面流程图所示，大致流程：</p>\n\n<ol>\n<li><p>new Vue() 创建 vue实例的过程，会调用 _init() 进行初始化操作，它会初始化生命周期、事件、 props、 methods、 data、 computed 与 watch 等。通过 Object.defineProperty 的 setter、getter 实现<strong>响应式</strong>以及<strong>依赖</strong>的收集。初始化后调用 $mount 挂载组件</p></li>\n<li><p>然后开始 complie 编译，分为三个阶段：parse、optimize、generate。<strong>parse</strong> 会用正则等方式解析 template 模板中的指令、class、style等数据，形成AST。<strong>optimize</strong> 的主要作用是标记 static 静态节点，在后续diff算法计算时会直接跳过静态节点，节省的比较时间，起到优化作用。<strong>generate</strong> 是将 AST 转化成 render function 字符串的过程，最终拿到 render function。</p></li>\n<li><p>接下来，由于之前在初始化的时候对 getter 和 setter 进行了设置，所以我们在读取对象的时候就会执行 getter 函数进行依赖收集，目的是将观察者 Watcher 对象放到当前的订阅者 Dep 的 subs 中。当给对象赋值的时候执行 setter 函数，setter 会通知之前设定的 Watcher 值发生变化需要更新视图。</p></li>\n<li><p>前面的 renderFunction 会转化为 VNode节点，在修改一个对象值的时候，会通过 setter -> Watcher -> update 的流程生成一个新的VNode。将新的 VNode 与旧的 VNode 一起传入 patch 进行比较，经过 diff 算法得出它们的「差异」。最后我们只需要将这些「差异」的对应 DOM 进行修改即可。</p></li>\n</ol>\n\n<h2 id='响应式绑定'>响应式绑定</h2>\n\n<p>我们都熟知 Vue.js 是一个 MVVM 的库，响应式系统可以说是它的一大特色了，下面就来了解vue是如何实现响应式的。</p>\n\n<h4 id='Object.defineProperty'>Object.defineProperty</h4>\n\n<p>vue之所以能实现响应式的绑定，主要靠的就是 <code>Object.defineProperty</code> 了。其实在之前的博文里，已经用到过很多次这个神奇的方法了，这里再了解一下：</p>\n\n<pre><code><span></span>\n<span>// obj 要在其上定义属性的对象</span>\n<span>// prop 要定义或修改的属性的名称</span>\n<span>// descriptor 将被定义或修改的属性描述符</span>\n<span></span>\n<span>Object.defineProperty(obj, prop, descriptor)</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<p>其中，descriptor有如下几个属性：<br></br>- <strong>configurable</strong>：当该值为true时,该属性描述符才能被改变<br></br>- <strong>enumerable</strong>：当值为true时，该属性才能够出现在对象的枚举属性中（比如 for...in、Object.keys等）<br></br>- <strong>value</strong>：该属性对应的值<br></br>- <strong>writable</strong>：值为true时，value才能被赋值运算符改变<br></br>- <strong>get</strong>：给属性提供 getter 方法，当访问该属性时执行方法<br></br>- <strong>set</strong>：给属性提供 setter 方法，当属性值修改时执行方法</p>\n\n<p>下面就来模拟一下用 <code>Object.defineProperty</code> 实现一个响应式的 demo，首先通过 <code>defineReactive</code> 函数封装 <code>Object.defineProperty</code> 方法，通过设置 <code>set</code> 方法实现当属性值变化时执行 <code>cb</code> 函数;然后封装 <code>observer</code>函数对 <code>data</code> 对象的所以属性进行绑定，当 <code>data</code> 对象中的属性值被修改时，则执行回调函数。具体代码如下：</p>\n\n<pre><code><span></span>\n<span>// 创建一个 data 对象</span>\n<span>var data = {'{'}</span>\n<span>    num: 2</span>\n<span>}</span>\n<span></span>\n<span>// 对一个对象的其中一个属性进行响应式绑定</span>\n<span>function defineReactive(obj, key, val) {'{'}</span>\n<span>    Object.defineProperty(obj, key, {'{'}</span>\n<span>        enumerable: true,</span>\n<span>        configurable: true,</span>\n<span>        get: function () {'{'}</span>\n<span>            // 在 vue 中，通过get会进行依赖</span>\n<span>            return val</span>\n<span>        },</span>\n<span>        set: function (newval) {'{'}</span>\n<span>            if (newval == val) return;</span>\n<span>            // 这里直接模拟一个简单的回调函数，当属性值被修改时执行</span>\n<span>            cb(key, newval);</span>\n<span>        }</span>\n<span>    })</span>\n<span>}</span>\n<span></span>\n<span>// 对 data 对象的所有属性进行响应式绑定</span>\n<span>function observer(data) {'{'}</span>\n<span>    Object.keys(data).forEach((key) =&gt; {'{'}</span>\n<span>        defineReactive(vale, key, data[key])</span>\n<span>    })</span>\n<span>}</span>\n<span></span>\n<span>// 数据更新时的回调数据</span>\n<span>function cb(key, val) {'{'}</span>\n<span>    /* 渲染视图 */</span>\n<span>    console.log(\"属性：\" + key + \"更新为：\" + val);</span>\n<span>}</span>\n<span></span>\n<span>// 创建一个Vue类</span>\n<span>class Vue {'{'}</span>\n<span>    constructor(options) {'{'}</span>\n<span>        this._data = options.data</span>\n<span>        observer(this._data)</span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n<span>// 实例化</span>\n<span>var vue = new Vue({'{'}</span>\n<span>    data: {'{'}</span>\n<span>        num: 2</span>\n<span>    }</span>\n<span>})</span>\n<span>vue._data.num = 3;</span>\n<span>vue._data.num = 8;</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<p>上面的 demo 最终会输出，:</p>\n\n<pre><code><span></span>\n<span>属性：num更新为：3</span>\n<span>属性：num更新为：8</span>\n<span></span>\n</code></pre>\n\n<p>Emmm，神奇～</p>\n\n<h3 id='依赖收集'>依赖收集</h3>\n\n<p>上面我们已经实现了一个简单的响应式系统，那么接下来就就聊聊依赖收集。</p>\n\n<p>上一节讲响应式绑定的时候是否有些漏洞呢？如果我们多个vue实例绑定同一个data对象，当data对象更新时该如何通知这些vue实例呢？所以这里就引入了 <strong>依赖收集</strong> 的概念。<br></br>demo如下：</p>\n\n<pre><code><span></span>\n<span>// 对一个对象的其中一个属性进行响应式绑定</span>\n<span>function defineReactive(obj, key, val) {'{'}</span>\n<span>    // 创建一个Dep实例</span>\n<span>    var dep = new Dep()</span>\n<span></span>\n<span>    Object.defineProperty(obj, key, {'{'}</span>\n<span>        enumerable: true,</span>\n<span>        configurable: true,</span>\n<span>        get: function () {'{'}</span>\n<span>            if (Dep.target) {'{'}</span>\n<span>                // 将当前watcher实例加入subs数组进行依赖收集</span>\n<span>                dep.add(Dep.target)</span>\n<span>            }</span>\n<span>            // console.log(dep)</span>\n<span>            return val</span>\n<span>        },</span>\n<span>        set: function (newval) {'{'}</span>\n<span>            if (newval == val) return;</span>\n<span>            // cb(key, newval);</span>\n<span>            dep.notify();</span>\n<span>        }</span>\n<span>    })</span>\n<span>}</span>\n<span></span>\n<span>// 对 data 对象的所有属性进行响应式绑定</span>\n<span>function observer(data) {'{'}</span>\n<span>    Object.keys(data).forEach((key) =&gt; {'{'}</span>\n<span>        defineReactive(data, key, data[key])</span>\n<span>    })</span>\n<span>}</span>\n<span></span>\n<span>// 依赖收集，当数据更新时通知所有Watcher更新</span>\n<span>class Dep {'{'}</span>\n<span>    constructor() {'{'}</span>\n<span>        // 存放所有的Watcher对象</span>\n<span>        this.subs = [];</span>\n<span>    }</span>\n<span>    // 添加一个watcher对象</span>\n<span>    add(sub) {'{'}</span>\n<span>        this.subs.push(sub)</span>\n<span>    }</span>\n<span>    // 通知所有的视图更新</span>\n<span>    notify() {'{'}</span>\n<span>        this.subs.map((sub) =&gt; {'{'}</span>\n<span>            sub.update();</span>\n<span>        })</span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n<span>// 观察者，当数据更新时需要收到通知</span>\n<span>class Watcher {'{'}</span>\n<span>    constructor(vm, expOrFn, cb, options) {'{'}</span>\n<span>        // Dep.target指向创建当前的watcher实例</span>\n<span>        Dep.target=this;</span>\n<span>    }</span>\n<span>    update() {'{'}</span>\n<span>        console.log('视图更新啦！')</span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n<span>class Vue {'{'}</span>\n<span>    constructor(options) {'{'}</span>\n<span>        this._data = options.data;</span>\n<span>        // 实例化 watcher</span>\n<span>        new Watcher();</span>\n<span>        // 响应式绑定数据</span>\n<span>        observer(this._data)</span>\n<span>        // 这里为了触发 get 函数，读取一下num</span>\n<span>        this._data.num</span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n<span>var vue = new Vue({'{'}</span>\n<span>    data: {'{'}</span>\n<span>        num:2</span>\n<span>    }</span>\n<span>})</span>\n<span>vue._data.num = 10</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<p>通过上面的demo我们了解几个概念：<br></br><code>Dep</code> 类可以理解为依赖收集器，主要用来收集当前响应式对象的依赖关系，当数据改变时，依赖的wahcer会被通知。可以看出来这是一个很典型的观察者模式。<br></br><code>Watcher</code> 类是一个观察者，当数据更新时会触发 Watcher 进行更新。其分为 渲染 watcher、计算属性 watcher 和 监听器 watcher。</p>\n\n<p>只要会被其他的观察者 (watchers) 依赖，比如data、data的属性、计算属性、props等，就会在闭包里生成一个 Dep 的实例 dep 并在被调用 getter 的时候 dep.depend 收集它被谁依赖了，并把被依赖的watcher存放到自己的subs中 this.subs.push(sub)，以便在自身改变的时候通知 notify 存放在 dep.subs 数组中依赖自己的 watchers 自己改变了，及时 update。</p>\n\n<p>只要依赖别的响应式的对象，就会生成一个 watcher，来统计这个 watcher 依赖了哪些响应式对象，在这个 watcher 求值前把当前 watcher 设置到全局 Dep.target，并在自己依赖的响应式对象发生改变的时候及时 update。</p>\n</div>\n            </Fragment>\n        )\n    }\n}"],"sourceRoot":""}