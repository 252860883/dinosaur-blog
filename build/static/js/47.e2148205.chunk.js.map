{"version":3,"sources":["components/headerLink.tsx","article/说了多少遍的Bind-Call-Apply.js"],"names":["Main","clickPosBtn","idName","dom","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","headerLink","map","item","index","level","key","onClick","title","React","Component","Template","_this","Object","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5__","_components_headerLink__WEBPACK_IMPORTED_MODULE_7__","id"],"mappings":"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","file":"static/js/47.e2148205.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/components/headerLink.scss\"\nexport default class Main extends React.Component<any, any>{\n    componentDidMount() { }\n\n    clickPosBtn = (idName: string) => {\n        const dom: any = document.getElementById(idName);\n        window.scrollTo({\n            top: dom.offsetTop - 10,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"headerLink\">\n                <div className=\"content\">\n                    <div className=\"real-content\">\n                        <div className='tag'>Reading Assistance ·</div>\n                        {\n                            this.props.headerLink.map((item: any, index: number) => {\n                                return <span className={'a' + item.level} key={index} onClick={() => this.clickPosBtn(item.title)}>{item.title}</span>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Fragment } from 'react'\nimport '../style/main.scss'\nimport HeaderLink from \"../components/headerLink\"\nexport default class Template extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            headerLink: [{\"level\":\"h2\",\"title\":\"Bind方法\"},{\"level\":\"h4\",\"title\":\"bind() 允许我们非常简单的在函数或者方法被调用时绑定 this 到指定对象上\"},{\"level\":\"h4\",\"title\":\"模拟实现柯里化\"},{\"level\":\"h3\",\"title\":\"Apply 和 Call方法\"},{\"level\":\"h4\",\"title\":\"apply 和 call 两者只是在传参形式上不一样\"},{\"level\":\"h4\",\"title\":\"配合 argument 场景\"},{\"level\":\"h4\",\"title\":\"参数可变场景\"},{\"level\":\"h2\",\"title\":\"总结\"}]\n        }\n    }\n    componentWillMount(){\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n            <Fragment>\n                <HeaderLink headerLink={this.state.headerLink}></HeaderLink>\n                <div className=\"article\">\n<div className=\"title-content\"><h1 className=\"title\">说了多少遍的Bind、Call、Apply</h1></div>\n<blockquote>\n  <p>正如标题所说，说了多少遍！多少遍！多少遍！唉，所以有了这边复习文，算是立下血志吧。</p>\n</blockquote>\n\n<p><code>bind</code>,<code>call</code>,<code>apply</code>三个方法都是用来将一个指定的 this 来调用或者创建一个函数。</p>\n\n<h2 id='Bind方法'>Bind方法</h2>\n\n<h4 id='bind() 允许我们非常简单的在函数或者方法被调用时绑定 this 到指定对象上'>bind() 允许我们非常简单的在函数或者方法被调用时绑定 this 到指定对象上</h4>\n\n<p>eg:</p>\n\n<pre><code><span></span>\n<span>var user = {'{'}</span>\n<span>  data: 666,</span>\n<span>  showData: function (other) {'{'}</span>\n<span>    console.log(this.data + other)</span>\n<span>  }</span>\n<span>}</span>\n<span></span>\n<span>var user2 = user.showData</span>\n<span>user2() // undefined,指向全局函数</span>\n<span>var user3 = user.showData.bind(user)</span>\n<span>user3('777') // 666777</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<h4 id='模拟实现柯里化'>模拟实现柯里化</h4>\n\n<blockquote>\n  <p>tip:柯里化：函数允许将一个函数作为返回值进行返回</p>\n</blockquote>\n\n<pre><code><span></span>\n<span>var user = {'{'}</span>\n<span>  data: 666,</span>\n<span>  currying: function (x, y) {'{'}</span>\n<span>    console.log(x + '+' + y + '=' + (x + y))</span>\n<span>  }</span>\n<span>}</span>\n<span>var curry = user.currying.bind(user, 5)</span>\n<span>curry(6) // 5+6=11</span>\n<span></span>\n</code></pre>\n\n<h3 id='Apply 和 Call方法'>Apply 和 Call方法</h3>\n\n<h4 id='apply 和 call 两者只是在传参形式上不一样'>apply 和 call 两者只是在传参形式上不一样</h4>\n\n<pre><code><span></span>\n<span>var person = {'{'}</span>\n<span>  name: \"LiMing\",</span>\n<span>  callName: function (a, b) {'{'}</span>\n<span>    console.log(this.name + \" is \" + a + \" and \" + b)</span>\n<span>  }</span>\n<span>}</span>\n<span>var callName = person.callName</span>\n<span>callName('people', \"goodman\") // undefined is people and goodman</span>\n<span>callName.call(person, 'dog', 'boy')  // LiMing is dog and boy</span>\n<span>callName.apply(person, ['cat', 'girl']) // LiMing is cat and girl</span>\n<span></span>\n</code></pre>\n\n<h4 id='配合 argument 场景'>配合 argument 场景</h4>\n\n<blockquote>\n  <p>因为 argument 是一个近似数组的结构，但是并不是数组，无法使用array方法，这就引入了我们的 apply方法</p>\n</blockquote>\n\n<pre><code><span></span>\n<span>// argument场景</span>\n<span>function newArray(){'{'}</span>\n<span>  console.log(Array.prototype.slice.call(arguments,0,2))</span>\n<span>}</span>\n<span>newArray(1,2,3,4,5,6) //0,2</span>\n<span></span>\n</code></pre>\n\n<h4 id='参数可变场景'>参数可变场景</h4>\n\n<pre><code><span></span>\n<span>// max 参数可变</span>\n<span>var allNumbers=[22,11,0,23,15]</span>\n<span>console.log(Math.max.apply(null,allNumbers) )</span>\n<span>// ES6拓展运算符也可以实现</span>\n<span>console.log(Math.max(...allNumbers) )</span>\n<span></span>\n</code></pre>\n\n<h2 id='总结'>总结</h2>\n\n<ol>\n<li>Bind()方法只是将绑定后的函数进行返回，而后两者是立即执行</li>\n<li>apply 和 call 只是穿参形式不一样，前者是接受一个数组参数，后者是多个参数</li>\n<li>箭头函数中，call和apply失效</li>\n</ol>\n</div>\n            </Fragment>\n        )\n    }\n}"],"sourceRoot":""}