{"version":3,"sources":["components/headerLink.tsx","article/艺术二维码生成器问题总结.js"],"names":["Main","clickPosBtn","idName","dom","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","headerLink","map","item","index","level","key","onClick","title","React","Component","Template","_this","Object","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5__","_components_headerLink__WEBPACK_IMPORTED_MODULE_7__","id"],"mappings":"kLAEqBA,qNAGjBC,YAAc,SAACC,GACX,IAAMC,EAAWC,SAASC,eAAeH,GACzCI,OAAOC,SAAS,CACZC,IAAKL,EAAIM,UAAY,GACrBC,KAAM,EACNC,SAAU,iIAIT,IAAAC,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,2BAEIJ,KAAKK,MAAMC,WAAWC,IAAI,SAACC,EAAWC,GAClC,OAAOR,EAAAC,EAAAC,cAAA,QAAMC,UAAW,IAAMI,EAAKE,MAAOC,IAAKF,EAAOG,QAAS,kBAAMb,EAAKX,YAAYoB,EAAKK,SAASL,EAAKK,mBApBvGC,IAAMC,wLCCnBC,cACjB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAlB,KAAAgB,IACVC,EAAAC,OAAAE,EAAA,EAAAF,CAAAlB,KAAAkB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAtB,QACKuB,MAAQ,CACTjB,WAAY,CAAC,CAACI,MAAQ,KAAKG,MAAQ,kFAA2B,CAACH,MAAQ,KAAKG,MAAQ,8HAA0B,CAACH,MAAQ,KAAKG,MAAQ,iHAA2C,CAACH,MAAQ,KAAKG,MAAQ,wEAAsB,CAACH,MAAQ,KAAKG,MAAQ,kGAA4B,CAACH,MAAQ,KAAKG,MAAQ,yDAH7RI,mKAWV,OACIhB,EAAAC,EAAAC,cAACqB,EAAA,SAAD,KACIvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYnB,WAAYN,KAAKuB,MAAMjB,aACnCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAC/BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAgBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,yFAC/BH,EAAAC,EAAAC,cAAA,MAAIuB,GAAG,kFAAP,kFAEAzB,EAAAC,EAAAC,cAAA,iMAEAF,EAAAC,EAAAC,cAAA,gGAMAF,EAAAC,EAAAC,cAAA,yHAEAF,EAAAC,EAAAC,cAAA,MAAIuB,GAAG,8HAAP,8HAEAzB,EAAAC,EAAAC,cAAA,slBAAwIF,EAAAC,EAAAC,cAAA,WAAxI,8LAEAF,EAAAC,EAAAC,cAAA,MAAIuB,GAAG,iHAAP,iHAEAzB,EAAAC,EAAAC,cAAA,oKAEAF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,iDACLF,EAAAC,EAAAC,cAAA,MAAIuB,GAAG,wEAAP,wEAvBgB,2QA2BhBzB,EAAAC,EAAAC,cAAA,8BACiB,IADjB,wOAM2C,IAN3C,4gBAwBAF,EAAAC,EAAAC,cAAA,yQAEAF,EAAAC,EAAAC,cAAA,MAAIuB,GAAG,kGAAP,kGAEAzB,EAAAC,EAAAC,cAAA,wWAEAF,EAAAC,EAAAC,cAAA,sCACyB,IADzB,45BAkBAF,EAAAC,EAAAC,cAAA,MAAIuB,GAAG,uDAAP,uDAEAzB,EAAAC,EAAAC,cAAA,ynBAAkMF,EAAAC,EAAAC,cAAA,sBAAlM,8HAAyOF,EAAAC,EAAAC,cAAA,WAAzO,+BAEAF,EAAAC,EAAAC,cAAA,oDAIAF,EAAAC,EAAAC,cAAA,6CAEAF,EAAAC,EAAAC,cAAA,oCAIAF,EAAAC,EAAAC,cAAA,4FAEAF,EAAAC,EAAAC,cAAA,+BACkB,IADlB,UAEU,IAFV,8DA1GsCW,IAAMC","file":"static/js/46.5894d7ff.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/components/headerLink.scss\"\nexport default class Main extends React.Component<any, any>{\n    componentDidMount() { }\n\n    clickPosBtn = (idName: string) => {\n        const dom: any = document.getElementById(idName);\n        window.scrollTo({\n            top: dom.offsetTop - 10,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"headerLink\">\n                <div className=\"content\">\n                    <div className=\"real-content\">\n                        <div className='tag'>Reading Assistance ·</div>\n                        {\n                            this.props.headerLink.map((item: any, index: number) => {\n                                return <span className={'a' + item.level} key={index} onClick={() => this.clickPosBtn(item.title)}>{item.title}</span>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Fragment } from 'react'\nimport '../style/main.scss'\nimport HeaderLink from \"../components/headerLink\"\nexport default class Template extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            headerLink: [{\"level\":\"h3\",\"title\":\"1.canvas如何转换为 img格式进行保存\"},{\"level\":\"h3\",\"title\":\"2.所有素材图片需要加载完成再进行二维码绘制\"},{\"level\":\"h3\",\"title\":\"3.在ios和chrome浏览器下设置 transition过渡会有闪烁bug\"},{\"level\":\"h3\",\"title\":\"4.canvas绘制出来的图像不清晰\"},{\"level\":\"h3\",\"title\":\"5.如何通过js下载canvas生成的图片到本地\"},{\"level\":\"h3\",\"title\":\"6. IE下不兼容vue2.0以及vuex\"}]\n        }\n    }\n    componentWillMount(){\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n            <Fragment>\n                <HeaderLink headerLink={this.state.headerLink}></HeaderLink>\n                <div className=\"article\">\n<div className=\"title-content\"><h1 className=\"title\">【项目总结】艺术二维码生成器</h1></div>\n<h3 id='1.canvas如何转换为 img格式进行保存'>1.canvas如何转换为 img格式进行保存</h3>\n\n<p>利用 canvas的 toDataURL 方法可以实现转换为制定格式的图片地址，代码如下：</p>\n\n<pre>\nvar image = new Image();  \nimage.src = canvas.toDataURL(\"image/png\");\nreturn image;\n</pre>  \n\n<p>注意：绘制的图片不能跨域，否则会报错</p>\n\n<h3 id='2.所有素材图片需要加载完成再进行二维码绘制'>2.所有素材图片需要加载完成再进行二维码绘制</h3>\n\n<p>canvas 使用 drawImg绘制图片，但是遇到一个问题就是 img的加载是异步的，所以有时图片还没有加载出来就进行绘制操作了，造成绘制出错。所以需要回掉异步执行绘制的操作。这里使用了promise.all() 来实现并列 promise对象完成时执行绘制。  <br></br>注意：all()里面的参数是包含所有promise的含有遍历器（比如数组）的对象。</p>\n\n<h3 id='3.在ios和chrome浏览器下设置 transition过渡会有闪烁bug'>3.在ios和chrome浏览器下设置 transition过渡会有闪烁bug</h3>\n\n<p>这是webkit内核的一个bug，需要在设置过渡的css下面再添加一句 </p>\n\n<pre><b>-webkit-backface-visibility:hidden;</b></pre>\n<h3 id='4.canvas绘制出来的图像不清晰'>4.canvas绘制出来的图像不清晰</h3>\n\ncanvas在绘制的时候，在手机上等高清屏幕下观看都比较模糊，这里引入\n![hidpi-canvas-polyfill](https://github.com/jondavidjohn/hidpi-canvas-polyfill.git)\n<pre>\nfunction init() {'{'}\n    var canvas = document.querySelector('canvas');\n    var ctx = canvas.getContext('2d');\n\n    // polyfill 提供了这个方法用来获取设备的 pixel ratio\n    var getPixelRatio = function(context) {'{'}\n        var backingStore = context.backingStorePixelRatio ||\n            context.webkitBackingStorePixelRatio ||\n            context.mozBackingStorePixelRatio ||\n            context.msBackingStorePixelRatio ||\n            context.oBackingStorePixelRatio ||\n            context.backingStorePixelRatio || 1;\n\n        return (window.devicePixelRatio || 1) / backingStore;\n    };\n\n    var ratio = getPixelRatio(ctx);\n\n    // 注意，这里的 width 和 height 变成了 width * ratio 和 height * ratio\n    ctx.drawImage(document.querySelector('img'), 0, 0, 300 * ratio, 90 * ratio);\n}\n</pre>\n\n<p>另外一种办法，设置canvas的初始长宽为实际的二倍，在dom元素设置css样式时，再设置回原来的大小。</p>\n\n<h3 id='5.如何通过js下载canvas生成的图片到本地'>5.如何通过js下载canvas生成的图片到本地</h3>\n\n<p>项目中有一个下载到本地的一个功能。利用的是a标签的download属性，目前只有 Firefox 和 Chrome 支持 download 属性。 download属性是h5新增属性。代码如下：</p>\n\n<pre>\ndownloadImg: function() {'{'}\n      //imgData为 toDataUrl('\"image/png\"')后生成的地址，格式为data:image/png;base64,...\n      let self = this,imgData = self.imgSrc;\n      //将mime-type改为image/octet-stream,强制让浏览器下载\n      imgData = imgData.replace('image/png', \"image/octet-stream\");\n      // 创建a标签\n      var save_link = document.createElement(\"a\");\n      save_link.href = imgData;\n      // 下载后的文件名设置，a标签的download属性可以下载文件\n      save_link.download = \"artQrcode_\" + new Date().getTime() + \".\" + \"png\";\n      //创建点击事件，让生成的a标签触发该事件\n      let e=document.createEvent('MouseEvents');\n      e.initMouseEvent('click');\n      save_link.dispatchEvent(e);\n    }\n</pre>\n\n<h3 id='6. IE下不兼容vue2.0以及vuex'>6. IE下不兼容vue2.0以及vuex</h3>\n\n<p>Babel 默认只转换新的 JavaScript 句法（syntax），而不转换新的 API ，比如 Iterator、Generator、Set、Maps、Proxy、Reflect、Symbol、Promise 等全局对象，以及一些定义在全局对象上的方法（比如 Object.assign）都不会转码。并且vuex是依赖于Promise实现的。为了解决这个问题，我们使用一种叫做<b> Polyfill</b> （代码填充，也可译作兼容性补丁） 的技术。 <br></br>首先npm安装</p>\n\n<pre>\nnpm install --save-dev babel-polyfill\n</pre>\n\n<p>然后在 main.js中</p>\n\n<pre>\nimport babel-polyfill\n</pre>\n\n<p>之后需要在 webpack.config.js 中配置文件</p>\n\n<pre>\nmodule.exports = {'{'}\n  entry: {'{'}\n    app: [\"babel-polyfill\", \"./src/main.js\"]\n  },\n  ...\n}\n</pre>\n</div>\n            </Fragment>\n        )\n    }\n}"],"sourceRoot":""}