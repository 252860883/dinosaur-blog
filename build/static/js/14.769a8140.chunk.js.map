{"version":3,"sources":["components/headerLink.tsx","article/async和await.js"],"names":["Main","clickPosBtn","idName","dom","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","headerLink","map","item","index","level","key","onClick","title","React","Component","Template","_this","Object","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5__","_components_headerLink__WEBPACK_IMPORTED_MODULE_7__","id","target","href"],"mappings":"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","file":"static/js/14.769a8140.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/components/headerLink.scss\"\nexport default class Main extends React.Component<any, any>{\n    componentDidMount() { }\n\n    clickPosBtn = (idName: string) => {\n        const dom: any = document.getElementById(idName);\n        window.scrollTo({\n            top: dom.offsetTop - 10,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"headerLink\">\n                <div className=\"content\">\n                    <div className=\"real-content\">\n                        <div className='tag'>Reading Assistance ·</div>\n                        {\n                            this.props.headerLink.map((item: any, index: number) => {\n                                return <span className={'a' + item.level} key={index} onClick={() => this.clickPosBtn(item.title)}>{item.title}</span>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Fragment } from 'react'\nimport '../style/main.scss'\nimport HeaderLink from \"../components/headerLink\"\nexport default class Template extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            headerLink: [{\"level\":\"h3\",\"title\":\"Async/Await 的出现\"},{\"level\":\"h3\",\"title\":\"Iterator\"},{\"level\":\"h3\",\"title\":\"Generator\"},{\"level\":\"h3\",\"title\":\"Async/Await\"},{\"level\":\"h3\",\"title\":\"参考\"}]\n        }\n    }\n    componentWillMount(){\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n            <Fragment>\n                <HeaderLink headerLink={this.state.headerLink}></HeaderLink>\n                <div className=\"article\">\n<div className=\"title-content\"><h1 className=\"title\">由 Async/Await 引发出来的一系列问题</h1></div>\n<h3 id='Async/Await 的出现'>Async/Await 的出现</h3>\n\n<p>在 ES6 出现之前，我们都是通过回调函数的方式来操作异步代码，如果出现大量的回调函数嵌套，代码那真的是辣眼睛，这也是我们常说的<strong>回调地狱</strong>。ES6+以后出现了<code>Promise</code>,大大的优化了异步编程的问题，也避免了回调地狱的问题，但是我们在实际开发中仍然会遇到一大堆then链的问题：</p>\n\n<pre><code><span></span>\n<span>ajax('XXX1')</span>\n<span>  .then(res =&gt; {'{'}</span>\n<span>      // 操作逻辑</span>\n<span>      return ajax('XXX2')</span>\n<span>  }).then(res =&gt; {'{'}</span>\n<span>      // 操作逻辑</span>\n<span>      return ajax('XXX3')</span>\n<span>  }).then(res =&gt; {'{'}</span>\n<span>      // 操作逻辑</span>\n<span>  })</span>\n<span></span>\n</code></pre>\n\n<p>这个时候，就由<code>Async/Await</code>登场了，使用 async 函数以后，使得异步操作变得更加方便：</p>\n\n<pre><code><span></span>\n<span>async function a(){'{'}</span>\n<span>  await promise1()</span>\n<span>  await promise2()</span>\n<span>  await promise3()</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p>我们都知道js是<strong>单线程</strong>的，异步的代码原则上是不会阻塞其他代码的执行，但是怎么在<code>async function</code>里面就不是那么回事了呢？ 关于<code>Async/Await</code>究竟是何物，我们继续去探索结果。</p>\n\n<h3 id='Iterator'>Iterator</h3>\n\n<blockquote>\n  <p>迭代器（Iterator）可以给一个对象“超能力”，包含一个 next() 方法，调用该方法返回一个对象包含两个属性：value - 当前位置的值；done - 是否迭代结束。</p>\n</blockquote>\n\n<p>在过去，我们通过for循环来遍历数组，通过<code>for...in</code>来遍历对象。ES\b6以后，只要一个对象包含<code>Iterator</code>,我们就可以通过<code>for...of</code>来实现遍历了！</p>\n\n<p>如果想让一个对象是可迭代的，那么这个对象或者其原型链中必须拥有<code>Symbol.iterator</code>属性。当该对象进行迭代时，它的<code>iterator</code>方法都会在不传参情况下被调用，返回的迭代器用于获取要迭代的值。</p>\n\n<p>当然，一些内置类型拥有默认的迭代器行为，例如 <code>Array</code>,<code>TypedArray</code>,<code>String</code>,<code>Map</code>,<code>Set</code>等。</p>\n\n<h3 id='Generator'>Generator</h3>\n\n<blockquote>\n  <p>生成器对象是由一个<strong>generator function</strong>返回的,并且它符合我们上面所说的可迭代协议和迭代器协议。</p>\n</blockquote>\n\n<p>来，我们定义一个<code>generator function</code>:</p>\n\n<pre><code><span></span>\n<span>function* gen() {'{'} </span>\n<span>  yield 1;</span>\n<span>  yield 2;</span>\n<span>  const a = yield 3;</span>\n<span>  yield a;</span>\n<span>}</span>\n<span>let g = gen(); // \"Generator {'{'} }\"</span>\n<span>console.log(g.next()); // {'{'}value:1,done:false}</span>\n<span>console.log(g.next()); // {'{'}value:2,done:false}</span>\n<span>console.log(g.next()); // {'{'}value:3,done:false}</span>\n<span>console.log(g.next(100)); // {'{'}value:100,done:false}</span>\n<span>console.log(g.next()); // {'{'}value:undefined,done:true}</span>\n<span></span>\n</code></pre>\n\n<p>如上面所示的代码片段，<code>function* gen(){'{'}}</code>就是一个生成器函数，而<code>g</code>就是一个生成器对象，它可以执行<code>next()</code>方法（这里可以通过接受一个参数用以向生成器传值，作为上一条yield操作的返回值），也可以被<code>for...of</code>遍历。</p>\n\n<p>等等？？</p>\n\n<p>我们看到在<code>generator function</code>中，我们只有执行了<code>next()</code>方法才会跳到下一个yeild，这期间函数内部的代码一直都是处于阻塞的状态。所以我们是不是可以把 yeild 返回值换成一个promise对象，当异步代码执行完毕再从<code>then()</code>回调中去执行<code>g.next()</code>，是不是就能够把异步的操作变成“同步”的了？为了验证我们的猜想，来上代码试试：</p>\n\n<pre><code><span></span>\n<span>// 这里模拟异步事件</span>\n<span>function getPromise1() {'{'}</span>\n<span>  return new Promise((resole, reject) =&gt; {'{'}</span>\n<span>    setTimeout(() =&gt; {'{'}</span>\n<span>      resole('get promise1')</span>\n<span>    }, 2000)</span>\n<span>  })</span>\n<span>}</span>\n<span>// 这里模拟异步事件</span>\n<span>function getPromise2() {'{'}</span>\n<span>  return new Promise((resole, reject) =&gt; {'{'}</span>\n<span>    setTimeout(() =&gt; {'{'}</span>\n<span>      resole('get promise2')</span>\n<span>    }, 1000)</span>\n<span>  })</span>\n<span>}</span>\n<span></span>\n<span>function* gen() {'{'}</span>\n<span>  console.log('run gen function');</span>\n<span>  yield getPromise1();</span>\n<span>  console.log('wait primise1 done,output this');</span>\n<span>  yield getPromise2();</span>\n<span>}</span>\n<span></span>\n<span>let g = gen();</span>\n<span>let g1 = g.next().value;</span>\n<span>g1.then(res =&gt; {'{'}</span>\n<span>  console.log(res);</span>\n<span>  let g2 = g.next().value;</span>\n<span>  g2.then(res2 =&gt; {'{'}</span>\n<span>    console.log(res2);</span>\n<span>    g.next();</span>\n<span>  })</span>\n<span>})</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<p>太好了！输出结果如我们所期待的，整个执行过程大概如下：</p>\n\n<ol>\n<li>创建遍历器对象，输出<code>run gen function</code></li>\n<li>第一次调用<code>g.next()</code>，并将一个promise对象赋值给<code>g1</code></li>\n<li>2s后，<code>g1</code>执行回调函数，输出<code>get promise1</code></li>\n<li>第二次调用<code>g.next()</code>，首先输出<code>wait primise1 done,output this</code>，然后将第二个promise2对象赋值给<code>g2</code></li>\n<li>1s后，<code>g1</code>执行回调函数，输出<code>get promise2</code></li>\n</ol>\n\n<p>不过，我们这例子中只是给了两个异步操作，但凡我们的操作有若干个，这一层层的嵌套也不是个事啊！所以我们来改造一下，使得上一个异步事件执行完了自动就去执行下一个：</p>\n\n<pre><code><span></span>\n<span>function async(gen) {'{'}</span>\n<span>  let g = gen();</span>\n<span>  function run() {'{'}</span>\n<span>    let gResult = g.next()</span>\n<span>    if (gResult.done) return;</span>\n<span>    let gIndex = gResult.value</span>\n<span>    gIndex.then(res =&gt; {'{'}</span>\n<span>      console.log(res);</span>\n<span>      run()</span>\n<span>    })</span>\n<span>  }</span>\n<span>  run()</span>\n<span>}</span>\n<span></span>\n<span>async(function*() {'{'}</span>\n<span>  console.log('run gen function');</span>\n<span>  yield getPromise1();</span>\n<span>  console.log('wait primise1 done,output this');</span>\n<span>  yield getPromise2();</span>\n<span>  console.log('wait primise2 done,output this');</span>\n<span>});</span>\n<span></span>\n</code></pre>\n\n<h3 id='Async/Await'>Async/Await</h3>\n\n<p>我们已经通过使用<code>Generator</code>实现了类似<code>Async/Await</code>使异步代码执行结束后再执行后续代码的功能，对比下我们用<code>Async/Await</code>来实现的代码：</p>\n\n<pre><code><span></span>\n<span>// 使用 Generator 实现</span>\n<span>async(function*() {'{'}</span>\n<span>  console.log('run gen function');</span>\n<span>  yield getPromise1();</span>\n<span>  console.log('wait primise1 done,output this');</span>\n<span>  yield getPromise2();</span>\n<span>  console.log('wait primise2 done,output this');</span>\n<span>});</span>\n<span></span>\n<span>// Async/Await 实现</span>\n<span>async function func() {'{'}</span>\n<span>  console.log('run gen function');</span>\n<span>  await getPromise1();</span>\n<span>  console.log('wait primise1 done,output this');</span>\n<span>  await getPromise2();</span>\n<span>  console.log('wait primise2 done,output this');</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p>可以非常直观的感受到，<code>Async/Await</code>就是一种语法糖，基于Generator 函数和自动执行器实现。不过实际上自动执行器要不我们上面的实现复杂些,下面给出spawn函数的实现，基本就是自动执行器的翻版：</p>\n\n<pre><code><span></span>\n<span>function spawn(genF) {'{'}</span>\n<span>  return new Promise(function(resolve, reject) {'{'}</span>\n<span>    const gen = genF();</span>\n<span>    function step(nextF) {'{'}</span>\n<span>      let next;</span>\n<span>      try {'{'}</span>\n<span>        next = nextF();</span>\n<span>      } catch(e) {'{'}</span>\n<span>        return reject(e);</span>\n<span>      }</span>\n<span>      if(next.done) {'{'}</span>\n<span>        return resolve(next.value);</span>\n<span>      }</span>\n<span>      Promise.resolve(next.value).then(function(v) {'{'}</span>\n<span>        step(function() {'{'} return gen.next(v); });</span>\n<span>      }, function(e) {'{'}</span>\n<span>        step(function() {'{'} return gen.throw(e); });</span>\n<span>      });</span>\n<span>    }</span>\n<span>    step(function() {'{'} return gen.next(undefined); });</span>\n<span>  });</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p>根据上面可知，await 操作之后的代码都相当于一个microtask微任务：</p>\n\n<pre><code><span></span>\n<span>async function async1() {'{'}</span>\n<span>    console.log('async1 start');</span>\n<span>    await async2();</span>\n<span>    console.log('async1 end');</span>\n<span>}</span>\n<span>// 等同于</span>\n<span>async function async1() {'{'}</span>\n<span>    console.log('async1 start');</span>\n<span>    Promise.resolve(async2()).then(() =&gt; {'{'}</span>\n<span>            // microtask</span>\n<span>            console.log('async1 end');</span>\n<span>        })</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<h3 id='参考'>参考</h3>\n\n<blockquote>\n  <p><a target=\"_blank\" href=\"https://muyiy.vip/question/async/9.html\">Async/Await 如何通过同步的方式实现异步</a></p>\n</blockquote>\n</div>\n            </Fragment>\n        )\n    }\n}"],"sourceRoot":""}