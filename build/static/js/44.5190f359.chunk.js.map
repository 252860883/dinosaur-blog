{"version":3,"sources":["components/headerLink.tsx","article/聊聊ajax、fetch、axios.js"],"names":["Main","clickPosBtn","idName","dom","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","headerLink","map","item","index","level","key","onClick","title","React","Component","Template","_this","Object","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5__","_components_headerLink__WEBPACK_IMPORTED_MODULE_7__","id","target","href"],"mappings":"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","file":"static/js/44.5190f359.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/components/headerLink.scss\"\nexport default class Main extends React.Component<any, any>{\n    componentDidMount() { }\n\n    clickPosBtn = (idName: string) => {\n        const dom: any = document.getElementById(idName);\n        window.scrollTo({\n            top: dom.offsetTop - 10,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"headerLink\">\n                <div className=\"content\">\n                    <div className=\"real-content\">\n                        <div className='tag'>Reading Assistance ·</div>\n                        {\n                            this.props.headerLink.map((item: any, index: number) => {\n                                return <span className={'a' + item.level} key={index} onClick={() => this.clickPosBtn(item.title)}>{item.title}</span>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Fragment } from 'react'\nimport '../style/main.scss'\nimport HeaderLink from \"../components/headerLink\"\nexport default class Template extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            headerLink: [{\"level\":\"h3\",\"title\":\"AJAX\"},{\"level\":\"h3\",\"title\":\"$.ajax()\"},{\"level\":\"h3\",\"title\":\"Axios\"},{\"level\":\"h3\",\"title\":\"Fetch\"},{\"level\":\"h3\",\"title\":\"总结\"}]\n        }\n    }\n    componentWillMount(){\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n            <Fragment>\n                <HeaderLink headerLink={this.state.headerLink}></HeaderLink>\n                <div className=\"article\">\n<div className=\"title-content\"><h1 className=\"title\">聊聊ajax、fetch、axios</h1></div>\n<blockquote>\n  <p>关于接口请求方法，近几年来有些变化，从一开始原生JS <code>AJAX</code> 到 JQuery 的 <code>$.ajax()</code>,再到 <code>Fetch</code> 和 vue 推荐的 <code>Axios</code>，但是否真正了解到每一个方法的优劣与使用场景了吗？</p>\n</blockquote>\n\n<h3 id='AJAX'>AJAX</h3>\n\n<p>在前几年的时候，AJAX 可谓是前端一大考点啊，各路关于前端招聘的简介里，怎么也得让 AJAX 拥有姓名。AJAX（Asynchronous JavaScript and XML）异步的 Javascript 和 XML，核心就是使用 XMLHttpRequest 对象（对于旧版本浏览器例如 IE5、IE6则使用 ActiveXObject 对象）。<br></br>AJAX进行后端数据请求主要分一下几步：<br></br>1.创建 XMLHttpRequest 对象<br></br>2.进行 get 请求<br></br>3.利用 readyState 对象的 onreadystatechange 事件进行后续DOM或其他操作</p>\n\n<p>具体实现见以下代码：</p>\n\n<pre><code><span></span>\n<span>// 1.创建 XMLHttpRequest 对象</span>\n<span></span>\n<span>var xmlhttp;</span>\n<span>if(window.XMLHttpRequest){'{'}</span>\n<span>    //IE7+,Firefox,Chrome,Opera,Safari浏览器执行代码</span>\n<span>    xmlhttp=new XMLHttpRequest();</span>\n<span>}else{'{'}</span>\n<span>    //IE6,IE5浏览器执行代码</span>\n<span>    xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");</span>\n<span>}</span>\n<span></span>\n<span>// 2.进行 get 请求</span>\n<span></span>\n<span>xmlhttp.open(\"GET\",\"/ajax/demo_get?t=\"+Math.random(),true);</span>\n<span>xmlhttp.send();</span>\n<span></span>\n<span>// 3.readyState </span>\n<span>// XMLHttpRequest 对象通过 readyState 对象存储状态信息</span>\n<span>// 当 readyState 状态改变时触发 onreadystatechange 事件。</span>\n<span></span>\n<span>xmlhttp.onreadystatechange=function(){'{'}</span>\n<span>    if(xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200){'{'}</span>\n<span>        var responseData = xmlhttp.responseText;</span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p>像上面这样使用 XMLHttpRequest 是来进行 ajax 请求是非常痛苦的，每做一个请求都要写这么长的代码！所以后来有许多的库都对其进行的封装，比如我们最常见的 JQuery。</p>\n\n<h3 id='$.ajax()'>$.ajax()</h3>\n\n<p>JQuery ajax 是对原生XHR的封装，除此以外还增添了对JSONP的支持，相较于直接使用ajax的“长篇大论”，直接一个方法就可以搞定请求了:</p>\n\n<pre><code><span></span>\n<span>$.ajax({'{'}</span>\n<span>   type: 'POST',</span>\n<span>   url: url,</span>\n<span>   data: data,</span>\n<span>   dataType: dataType,</span>\n<span>   success: function () {'{'}},</span>\n<span>   error: function () {'{'}}</span>\n<span>});</span>\n<span></span>\n</code></pre>\n\n<p>虽然JQuery便捷了开发，但依旧受限于 XHR 的缺点。同时对基于事件的异步做的不好，而且如果我们只是使用 <code>$.ajax()</code> 这个方法还需要将整个 Jquery 文件引入。总之，如果不是在 JQuery 项目，建议还是不要使用此方法。</p>\n\n<h3 id='Axios'>Axios</h3>\n\n<p>自从尤大开始停止维护 vue-resource 并推荐大家使用 axios 之后，axios 逐渐被大家所认识。axios 是一个基于Promise 用于浏览器和 nodejs 的 HTTP 客户端，其实本质上底层也是通过 XHR 来实现的。尤大推荐自然有他的原因，axios 使用 Promise 封装，满足了现在的 ES6 的规范，同时还增加了很多的方法和功能，具体如下：<br></br>1.拦截请求和响应<br></br>2.转换请求和响应数据<br></br>3.支持 Promise API<br></br>4.提供了一些并发操作的方法<br></br>5.自动转换JSON数据<br></br>6.客户端支持防范XSRF<br></br>7.支持取消请求<br></br>8.从node.js发出http请求</p>\n\n<pre><code><span></span>\n<span>&lt;!-- 基础示例 --&gt;</span>\n<span></span>\n<span>const axios = require('axios');</span>\n<span></span>\n<span>axios.get('/user?ID=12345')</span>\n<span>  .then(function (response) {'{'}</span>\n<span>    // handle success</span>\n<span>    console.log(response);</span>\n<span>  })</span>\n<span>  .catch(function (error) {'{'}</span>\n<span>    // handle error</span>\n<span>    console.log(error);</span>\n<span>  })</span>\n<span></span>\n<span>&lt;!-- 拦截器 在请求或响应被 then 或 catch 处理前拦截它们--&gt;</span>\n<span></span>\n<span>// 添加请求拦截器</span>\n<span>axios.interceptors.request.use(function (config) {'{'}</span>\n<span>    // 在发送请求之前做些什么</span>\n<span>    return config;</span>\n<span>  }, function (error) {'{'}</span>\n<span>    // 对请求错误做些什么</span>\n<span>    return Promise.reject(error);</span>\n<span>  });</span>\n<span></span>\n<span>// 添加响应拦截器</span>\n<span>axios.interceptors.response.use(function (response) {'{'}</span>\n<span>    // 对响应数据做点什么</span>\n<span>    return response;</span>\n<span>  }, function (error) {'{'}</span>\n<span>    // 对响应错误做点什么</span>\n<span>    return Promise.reject(error);</span>\n<span>  });</span>\n<span></span>\n<span>&lt;!-- 并发处理 --&gt;</span>\n<span></span>\n<span>axios.all([getRequest1(), getRequest2()])</span>\n<span>  .then(axios.spread(function (acct, perms) {'{'}</span>\n<span>    // Both requests are now complete</span>\n<span>  }));</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<p>更多关于 axios 的使用方法，直接访问 <a target=\"_blank\" href=\"https://github.com/axios/axios\">github</a> 查阅吧。</p>\n\n<h3 id='Fetch'>Fetch</h3>\n\n<p>Fetch API 已经作为现代浏览器中异步网络请求的标准方法，其使用 Promise 作为基本构造要素。Fetch 提供了对 Request 和 Response （以及其他与网络请求有关的）对象的通用定义。发送请求或者获取资源，需要使用 WindowOrWorkerGlobalScope.fetch 方法，它在Window 和 WorkerGlobalScope接口上，因此在几乎所有环境中都可以用这个方法获取到资源。无论是service workers、Cache API、又或者是其他处理请求和响应的方式。</p>\n\n<pre><code><span></span>\n<span>fetch(url, {'{'}</span>\n<span>  method: \"POST\",</span>\n<span>  body: JSON.stringify(data),</span>\n<span>  headers: {'{'}</span>\n<span>    \"Content-Type\": \"application/json\"</span>\n<span>  },</span>\n<span>  credentials: \"same-origin\"</span>\n<span>}).then(function(response) {'{'}</span>\n<span>  response.status     //=&gt; number 100–599</span>\n<span>  response.statusText //=&gt; String</span>\n<span>  response.headers    //=&gt; Headers</span>\n<span>  response.url        //=&gt; String</span>\n<span>  return response.text() // .text() 或者 .json() 可以获得响应体，并返回一个 promise 对象。</span>\n<span>}, function(error) {'{'}</span>\n<span>  error.message //=&gt; String</span>\n<span>})</span>\n<span></span>\n</code></pre>\n\n<p>Fetch 用途这么广泛，既可以在 window 又可以在 service worker ，但是 Fetch 现在<strong>没有办法终止一个请求，并且不能监测上传进度</strong>。如果我们需要这些功能可以选择 axios。不过已经有些方案来解决这些问题了。</p>\n\n<p>我们在使用 Fetch 时可以引入 <code>AbortController</code> 和 <code>AbortSignal</code>，这个通用的API来通知中止事件:</p>\n\n<pre><code><span></span>\n<span>const controller = new AbortController()</span>\n<span>const signal = controller.signal</span>\n<span>fetch('./file.json', {'{'} signal })</span>\n<span></span>\n<span>// 5s后终止请求</span>\n<span>setTimeout(() =&gt; controller.abort(), 5 * 1000)</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<h3 id='总结'>总结</h3>\n\n<ol>\n<li>ajax 是通过 XHR 实现与服务器的异步请求</li>\n<li>$.ajax() 是对原生的 ajax 进行的封装，简化了代码编写</li>\n<li>aixos 也是对 XHR 的进一步封装，支持 Promise API, 同时还增加了并发请求、拦截请求和响应、转换请求响应数据、取消请求等功能。</li>\n<li>fetch 是 ES规范中的语法，与 XHR无关，几乎所有环境中都可以用，但原生的 Fetch 不能终止请求也不能检测上传进度。</li>\n</ol>\n\n<blockquote>\n  <p>参考:<br></br><a target=\"_blank\" href=\"https://www.jianshu.com/p/8bc48f8fde75\">ajax和axios、fetch的区别</a><br></br><a target=\"_blank\" href=\"https://mp.weixin.qq.com/s/qM_tvb2-A__hdjjgnS1y6w\">认识 Fetch API</a></p>\n</blockquote>\n</div>\n            </Fragment>\n        )\n    }\n}"],"sourceRoot":""}