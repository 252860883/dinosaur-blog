{"version":3,"sources":["components/headerLink.tsx","article/剖析Vue响应式绑定.js"],"names":["Main","clickPosBtn","idName","dom","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","headerLink","map","item","index","level","key","onClick","title","React","Component","Template","_this","Object","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5__","_components_headerLink__WEBPACK_IMPORTED_MODULE_7__","id","target","href"],"mappings":"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","file":"static/js/26.0a4a45a7.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/components/headerLink.scss\"\nexport default class Main extends React.Component<any, any>{\n    componentDidMount() { }\n\n    clickPosBtn = (idName: string) => {\n        const dom: any = document.getElementById(idName);\n        window.scrollTo({\n            top: dom.offsetTop - 10,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"headerLink\">\n                <div className=\"content\">\n                    <div className=\"real-content\">\n                        <div className='tag'>Reading Assistance ·</div>\n                        {\n                            this.props.headerLink.map((item: any, index: number) => {\n                                return <span className={'a' + item.level} key={index} onClick={() => this.clickPosBtn(item.title)}>{item.title}</span>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Fragment } from 'react'\nimport '../style/main.scss'\nimport HeaderLink from \"../components/headerLink\"\nexport default class Template extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            headerLink: [{\"level\":\"h3\",\"title\":\"如何实现数据双向绑定\"},{\"level\":\"h3\",\"title\":\"如何对数组和对象进行数据劫持\"},{\"level\":\"h3\",\"title\":\"Vue.set 原理\"},{\"level\":\"h3\",\"title\":\"Proxy\"},{\"level\":\"h3\",\"title\":\"参考\"}]\n        }\n    }\n    componentWillMount(){\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n            <Fragment>\n                <HeaderLink headerLink={this.state.headerLink}></HeaderLink>\n                <div className=\"article\">\n<div className=\"title-content\"><h1 className=\"title\">剖析Vue响应式绑定</h1></div>\n<p>Vue的一大特色就是双向绑定，关于其原理我想大多数人都能直接说出来，使用<code>Object.defineProperty</code>对象拦截通过<code>setter</code>、<code>getter</code>监听数据变化作出相应操作。虽然原理大概如此，但是还需要再深入的进行一些了解。</p>\n\n<h3 id='如何实现数据双向绑定'>如何实现数据双向绑定</h3>\n\n<p>Vue 的数据双向绑定主要是指：数据变化更新视图，视图变化更新数据。</p>\n\n<p>Vue 主要通过4个步骤实现数据双向绑定：</p>\n\n<ol>\n<li><strong>实现一个监听器 Observer：</strong>对数据对象进行遍历，包括子属性对象的属性，利用<code>Object.defineProperty()</code>对属性都加上<code>setter</code>和<code>getter</code>。这样，给这个对象的某个值赋值，就会触发 <code>setter</code>,就能听到了数据变化。</li>\n<li><strong>实现一个解析器 Compile：</strong>解析 Vue 模板指令，将模板中的变量都替换成数据，然后初始化渲染页面视图，并将每个指令对应的节点绑定更新函数，添加监听数据的订阅者，一旦数据有变动，收到通知，调用更新函数进行数据更新。</li>\n<li><strong>实现一个订阅者 Watcher：</strong>Watcher 订阅者是<code>Observer</code>和<code>Compile</code>之间通信的桥梁 ，主要的任务是订阅<code>Observer</code>中的属性值变化的消息，当收到属性值变化的消息时，触发解析器 <code>Compile</code>中对应的更新函数。</li>\n<li><strong>实现一个订阅器 Dep：</strong>订阅器采用 发布-订阅 设计模式，用来收集订阅者<code>Watcher</code>，对监听器<code>Observer</code>和<code>订阅者 Watcher</code>进行统一管理。</li>\n</ol>\n\n<p>具体的实现流程可以围观<a target=\"_blank\" href=\"https://juejin.im/post/5d421bcf6fb9a06af23853f1\">《0 到 1 掌握：Vue 核心之数据双向绑定》</a>这篇博客。</p>\n\n<h3 id='如何对数组和对象进行数据劫持'>如何对数组和对象进行数据劫持</h3>\n\n<p>上面已经提到了 Vue 通过<code>Object.defineProperty()</code>进行数据劫持，但是<code>Object.defineProperty()</code>有个缺陷，<strong>只能对属性进行数据劫持</strong>，所以不能对整个对象或是数组进行劫持。对此，Vue 也对数组和对象类型进行了一些增强处理，即通过递归遍历来实现：</p>\n\n<pre><code><span></span>\n<span>/**</span>\n<span> * 对数组进行遍历</span>\n<span> */</span>\n<span>observeArray (items: Array&lt;any&gt;) {'{'}</span>\n<span>    for (let i = 0, l = items.length; i &lt; l; i++) {'{'}</span>\n<span>        observe(items[i])  // observe 功能为监测数据的变化</span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n<span>/**</span>\n<span> * 对属性进行递归遍历</span>\n<span> */</span>\n<span>let childOb = !shallow &amp;&amp; observe(val) // observe 功能为监测数据的变化</span>\n<span></span>\n</code></pre>\n\n<p>虽然 Vue 尽自己最大限度的解决了对象和数组的双向绑定问题，但是它还是<strong>无法监测到对象属性的增加或者是删除</strong>，因为 Vue 会在初始化实例的时候对属性执行<code>getter</code>/<code>setter</code>转化，所以属性必须在初始化的时候存在才会实现响应式。</p>\n\n<p>对于数组，Vue对 Array 的一些原生方法进行了包裹，包括：<code>push()</code>/<code>pop()</code>/<code>shift()</code>/<code>unshift()</code>/<code>splice()</code>/<code>sort()</code>/<code>reverse()</code>，这些方法都会触发视图响应式更新。具体我们可以来参考Vue源码中<a target=\"_blank\" href=\"https://github.com/vuejs/vue/blob/dev/src/core/observer/array.js\">array.js</a>文件：</p>\n\n<pre><code><span></span>\n<span>/*</span>\n<span> * not type checking this file because flow doesn't play well with</span>\n<span> * dynamically accessing methods on Array prototype</span>\n<span> */</span>\n<span>import {'{'} def } from '../util/index'</span>\n<span>// </span>\n<span>const arrayProto = Array.prototype</span>\n<span>export const arrayMethods = Object.create(arrayProto)</span>\n<span></span>\n<span>const methodsToPatch = [</span>\n<span>  'push',</span>\n<span>  'pop',</span>\n<span>  'shift',</span>\n<span>  'unshift',</span>\n<span>  'splice',</span>\n<span>  'sort',</span>\n<span>  'reverse'</span>\n<span>]</span>\n<span></span>\n<span>/**</span>\n<span> * Intercept mutating methods and emit events</span>\n<span> */</span>\n<span>methodsToPatch.forEach(function (method) {'{'}</span>\n<span>  // cache original method</span>\n<span>  const original = arrayProto[method]</span>\n<span>  // def 的作用是重新定义对象属性的value值</span>\n<span>  def(arrayMethods, method, function mutator (...args) {'{'}</span>\n<span>    const result = original.apply(this, args)</span>\n<span>    const ob = this.__ob__</span>\n<span>    let inserted</span>\n<span>    switch (method) {'{'}</span>\n<span>      case 'push':</span>\n<span>      case 'unshift':</span>\n<span>        inserted = args</span>\n<span>        break</span>\n<span>      case 'splice':</span>\n<span>        inserted = args.slice(2)</span>\n<span>        break</span>\n<span>    }</span>\n<span>    if (inserted) ob.observeArray(inserted)</span>\n<span>    // notify change</span>\n<span>    ob.dep.notify()</span>\n<span>    return result</span>\n<span>  })</span>\n<span>})</span>\n<span></span>\n</code></pre>\n\n<p>从上面源码可以看出，Vue 对 Array 几个方法进行重写，除了执行数组原始方法以外，还会额外执行<code>ob.dep.notify()</code>，在这里通知变更就是很关键的实现响应式了。但是到这一步我们<strong>通过索引设置一个数组项或者改变数组的长度仍然无法实现响应式</strong>：</p>\n\n<pre><code><span></span>\n<span>var vm = new Vue({'{'}</span>\n<span>  data: {'{'}</span>\n<span>    items: ['a', 'b', 'c']</span>\n<span>  }</span>\n<span>})</span>\n<span>vm.items[1] = 'x' // 不是响应性的</span>\n<span>vm.items.length = 2 // 不是响应性的</span>\n<span></span>\n</code></pre>\n\n<p>既然 Vue 都对数组下手开刀支持响应式了，为什么对数组下标形式也处理下呢？对此问题尤大给出的解释是出于性能的考虑。所以针对上述不支持响应式的情况，Vue 也给出了解决办法,就是使用 <code>Vue.set</code>向响应式对象中新增属性。</p>\n\n<h3 id='Vue.set 原理'>Vue.set 原理</h3>\n\n<blockquote>\n  <p>Vue.set( target, propertyName/index, value )</p>\n</blockquote>\n\n<p>作用：向响应式对象中添加一个属性，并确保这个新属性同样是响应式的，且触发视图更新。它必须用于向响应式对象上添加新属性。</p>\n\n<pre><code><span></span>\n<span>var vm = new Vue({'{'}</span>\n<span>  data: {'{'}</span>\n<span>    userProfile: {'{'}</span>\n<span>      name: 'Anika'</span>\n<span>    }</span>\n<span>  }</span>\n<span>})</span>\n<span>Vue.set(vm.userProfile, 'age', 27); // age 是响应式属性</span>\n<span>vm.userProfile.height = 20; // height 不是响应式属性</span>\n<span></span>\n</code></pre>\n\n<p>这神奇的<code>Vue.set</code>究竟是怎么实现的呢？在源码<a target=\"_blank\" href=\"https://github.com/vuejs/vue/blob/dev/src/core/observer/index.js\">core/observer/index.js</a>文件中可以找到<code>set</code>方法的定义：</p>\n\n<pre><code><span></span>\n<span>/**</span>\n<span> * Set a property on an object. Adds the new property and</span>\n<span> * triggers change notification if the property doesn't</span>\n<span> * already exist.</span>\n<span> */</span>\n<span>export function set (target: Array&lt;any&gt; | Object, key: any, val: any): any {'{'}</span>\n<span>  if (process.env.NODE_ENV !== 'production' &amp;&amp;</span>\n<span>    (isUndef(target) || isPrimitive(target))</span>\n<span>  ) {'{'}</span>\n<span>    warn(`Cannot set reactive property on undefined, null, or primitive value: ${'{'}(target: any)}`)</span>\n<span>  }</span>\n<span>  // 如果是数组 执行 splice方法触发响应式</span>\n<span>  if (Array.isArray(target) &amp;&amp; isValidArrayIndex(key)) {'{'}</span>\n<span>    target.length = Math.max(target.length, key)</span>\n<span>    target.splice(key, 1, val)</span>\n<span>    return val</span>\n<span>  }</span>\n<span>  // 如果属性已经存在则直接进行赋值操作</span>\n<span>  if (key in target &amp;&amp; !(key in Object.prototype)) {'{'}</span>\n<span>    target[key] = val</span>\n<span>    return val</span>\n<span>  }</span>\n<span>  const ob = (target: any).__ob__</span>\n<span>  if (target._isVue || (ob &amp;&amp; ob.vmCount)) {'{'}</span>\n<span>    process.env.NODE_ENV !== 'production' &amp;&amp; warn(</span>\n<span>      'Avoid adding reactive properties to a Vue instance or its root $data ' +</span>\n<span>      'at runtime - declare it upfront in the data option.'</span>\n<span>    )</span>\n<span>    return val</span>\n<span>  }</span>\n<span>  if (!ob) {'{'}</span>\n<span>    target[key] = val</span>\n<span>    return val</span>\n<span>  }</span>\n<span>  defineReactive(ob.value, key, val)</span>\n<span>  ob.dep.notify()</span>\n<span>  return val</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p>可以看到，如果对象是数组的话直接使用<code>target.splice(key, 1, val)</code>来触发响应式，如果给对象增加新属性，会调用<code>defineReactive()</code>方法,这个方法其实就是在Vue在初始化对象时给对象属性采用<code>Object.defineProperty</code>动态添加<code>getter</code>和<code>setter</code>的功能，说白了可以理解为就给新增对象就像初始化那样做一套响应式逻辑。</p>\n\n<h3 id='Proxy'>Proxy</h3>\n\n<p>尤大之前就说过了 Vue3.0 要把 <code>Object.defineProperty</code> 用 <code>Proxy</code> 来进行重构了。这个<code>Proxy</code>可真是个好东西，和<code>Object.defineProperty</code>比起来有诸多优点：</p>\n\n<ol>\n<li>Proxy 可以直接监听对象而非属性；</li>\n<li>Proxy 可以直接监听数组的变化；</li>\n<li>Proxy 有多达 13 种拦截方法,不限于<code>apply</code>、<code>ownKeys</code>、<code>deleteProperty</code>、<code>has</code>等等,是<code>Object.defineProperty</code>不具备的；</li>\n<li>Proxy 返回的是一个新对象,我们可以只操作新的对象达到目的,而<code>Object.defineProperty</code>只能遍历对象属性直接修改；</li>\n<li>Proxy 作为新标准将受到浏览器厂商重点持续的性能优化，也就是传说中的新标准的性能红利；</li>\n</ol>\n\n<p>最后再来回顾一下 <code>Proxy</code>如何使用吧，Proxy对象用于定义基本操作的自定义行为（如属性查找，赋值，枚举，函数调用等）：</p>\n\n<pre><code><span></span>\n<span>let handler = {'{'}</span>\n<span>    // 获取属性时执行的回调函数</span>\n<span>    get: function(target, name){'{'}</span>\n<span>        return name in target ? target[name] : 37;</span>\n<span>    },</span>\n<span>    // 设置属性时执行的回调函数</span>\n<span>    set: function (obj, prop, value) {'{'}</span>\n<span>        ...</span>\n<span>    }</span>\n<span>};</span>\n<span></span>\n<span>let p = new Proxy({'{'}}, handler); // 第一个参数为被包装的目标对象，第二个参数为各种操作回调函数的集合</span>\n<span></span>\n<span>p.a = 1; </span>\n<span>p.b = undefined;</span>\n<span></span>\n<span>console.log(p.a, p.b);    // 1, undefined</span>\n<span>console.log('c' in p, p.c);    // false, 37</span>\n<span></span>\n</code></pre>\n\n<h3 id='参考'>参考</h3>\n\n<blockquote>\n  <p><a target=\"_blank\" href=\"https://juejin.im/post/5d421bcf6fb9a06af23853f1\">0 到 1 掌握：Vue 核心之数据双向绑定</a><br></br><a target=\"_blank\" href=\"https://juejin.im/post/5a04231af265da431f4a84be\">Vue响应式----数组变异方法</a></p>\n</blockquote>\n</div>\n            </Fragment>\n        )\n    }\n}"],"sourceRoot":""}