{"version":3,"sources":["components/headerLink.tsx","article/函数节流与防抖.js"],"names":["Main","clickPosBtn","idName","dom","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","headerLink","map","item","index","level","key","onClick","title","React","Component","Template","_this","Object","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5__","_components_headerLink__WEBPACK_IMPORTED_MODULE_7__","id","src","alt"],"mappings":"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","file":"static/js/22.24af2455.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/components/headerLink.scss\"\nexport default class Main extends React.Component<any, any>{\n    componentDidMount() { }\n\n    clickPosBtn = (idName: string) => {\n        const dom: any = document.getElementById(idName);\n        window.scrollTo({\n            top: dom.offsetTop - 10,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"headerLink\">\n                <div className=\"content\">\n                    <div className=\"real-content\">\n                        <div className='tag'>Reading Assistance ·</div>\n                        {\n                            this.props.headerLink.map((item: any, index: number) => {\n                                return <span className={'a' + item.level} key={index} onClick={() => this.clickPosBtn(item.title)}>{item.title}</span>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Fragment } from 'react'\nimport '../style/main.scss'\nimport HeaderLink from \"../components/headerLink\"\nexport default class Template extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            headerLink: [{\"level\":\"h3\",\"title\":\"节流函数（Throttle）\"},{\"level\":\"h3\",\"title\":\"防抖函数（Debounce）\"},{\"level\":\"h3\",\"title\":\"利用 Throttle 优化 Debounce\"},{\"level\":\"h3\",\"title\":\"requestAnimationFrame\"},{\"level\":\"h3\",\"title\":\"总结\"}]\n        }\n    }\n    componentWillMount(){\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n            <Fragment>\n                <HeaderLink headerLink={this.state.headerLink}></HeaderLink>\n                <div className=\"article\">\n<div className=\"title-content\"><h1 className=\"title\">事件节流（throttle）与防抖（debounce）</h1></div>\n<h3 id='节流函数（Throttle）'>节流函数（Throttle）</h3>\n\n<blockquote>\n  <p><strong>固定间隔时间内只执行一次</strong></p>\n</blockquote>\n\n<p>当我们触发 <code>scroll</code> 、 <code>mousemove</code> 等连续不断的事件时，如果有非常耗时耗内存的业务需要处理，那肯定会对页面的性能产生影响。所以节流函数的意义就是不管你触发多少次我只会在固定的间隔时间内执行一次。 </p>\n\n<p><strong>第一种实现：利用时间戳（首次必触发，最后一次不会触发）</strong><br></br>这种实现原理很简单，利用闭包的缓存原理，将 lastTime （即上次执行任务的时间）缓存，每次执行时生成最新时间 nowTime 去和 lastTime 进行比对，如果时间大于设置的间隔时间则执行任务并将 lastTime 更新为最新时间。</p>\n\n<pre><code><span></span>\n<span>function throttle(fn, delay) {'{'}</span>\n<span>    let lastTime = 0, timer;</span>\n<span>    return function (...args) {'{'}</span>\n<span>        let nowTime = new Date().getTime();</span>\n<span>        if (nowTime - lastTime &gt; delay) {'{'}</span>\n<span>            fn.apply(this, args);</span>\n<span>            lastTime = nowTime</span>\n<span>        }</span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p><strong>第二种实现：利用setTimeout(第一次不会触发，最后一次会触发)</strong></p>\n\n<pre><code><span></span>\n<span>function throttle(fn, time) {'{'}</span>\n<span>    let timer = null;</span>\n<span>    return function (...args) {'{'}</span>\n<span>    // 当定时器被清除，可以执行</span>\n<span>    if (!timer) {'{'}</span>\n<span>        timer = setTimeout(() =&gt; {'{'}</span>\n<span>        timer = null; // 清除定时器</span>\n<span>        fn.apply(this, args);</span>\n<span>        }, time);</span>\n<span>    }</span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<h3 id='防抖函数（Debounce）'>防抖函数（Debounce）</h3>\n\n<blockquote>\n  <p><strong>无论触发多少次，只作用于最后一次</strong></p>\n</blockquote>\n\n<p>防抖函数的原理很简单，利用闭包的缓存原理对定时器进行缓存处理，每次执行 debounce 函数都会清除掉上一次创建的定时器，如果 delay 时间内 debounce 函数没被执行，则定时器中的操作将会被执行。</p>\n\n<pre><code><span></span>\n<span>function debounce(fn, delay) {'{'}</span>\n<span>    let timeout;</span>\n<span>    return function () {'{'}</span>\n<span>        let self = this, args = arguments;</span>\n<span>        // 每次执行 debounce 都将上次的事件清除</span>\n<span>        clearTimeout(timeout);</span>\n<span>        // 设置定时器，delay 时间内，debounce</span>\n<span>        timeout = setTimeout(() =&gt; {'{'}</span>\n<span>            fn.call(self, ...args)</span>\n<span>        },delay)</span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<blockquote>\n  <p><strong>场景举例</strong>：比如我们业务场景中经常出现的按钮点击，为了防止用户频繁点击按钮而造成多余的逻辑处理，我们可以通过 debounce 函数来限制。再或者输入框提示词信息。</p>\n</blockquote>\n\n<p><img src=\"http://wx3.sinaimg.cn/mw690/a73bc6a1ly1g1ppxcogwug20j00c01ky.gif\" alt=\"iamge\" title=\"\" /></p>\n\n<h3 id='利用 Throttle 优化 Debounce'>利用 Throttle 优化 Debounce</h3>\n\n<blockquote>\n  <p><strong>不能让人家一直不执行啊！</strong></p>\n</blockquote>\n\n<p>上面我们看到了防抖函数的作用，不过思考一下如果一个用户一直点这个按钮会怎么样呢？那结果肯定是迟迟没有反应！这怎么能行，我们是不是也得来个限制，到了一段时间一定要执行一次才行呀，不能任由用户就这样点下去。<br></br>我们在 denounce 函数的基础上，引入 Throttle 的 lastTime 的概念，在闭包函数里，同样是先得到 nowTime，先判断是否达到间隔时间，达到就执行任务，否则继续进行原始的 debounce 函数。</p>\n\n<pre><code><span></span>\n<span>// debounce 节流函数</span>\n<span>function debounceMore(fn, interval, delay) {'{'}</span>\n<span>    let lastTime = 0, timer;</span>\n<span>    return function () {'{'}</span>\n<span>        let nowTime = new Date().getTime();</span>\n<span>        let that = this, args = arguments;</span>\n<span>        if (nowTime - lastTime &gt; 500) {'{'}</span>\n<span>            fn.call(that, ...args);</span>\n<span>            lastTime = nowTime</span>\n<span>        } else {'{'}</span>\n<span>            clearTimeout(timer);</span>\n<span>            timer = setTimeout(() =&gt; {'{'}</span>\n<span>                fn.call(self, ...args)</span>\n<span>            }, delay)</span>\n<span>        }</span>\n<span></span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<h3 id='requestAnimationFrame'>requestAnimationFrame</h3>\n\n<p>Html5 提供了 <code>requestAnimationFrame</code> 方法来解决频繁操作的性能问题，而这个方法的触发间隔由系统来决定，每次浏览器重绘之前执行回调函数。</p>\n\n<pre><code><span></span>\n<span>window.requestAnimationFrame(callback);</span>\n<span></span>\n</code></pre>\n\n<h3 id='总结'>总结</h3>\n\n<p>频繁触发事件时，函数防抖只会在最后一次触发事件只会才会执行回调内容，其他情况下会重新计算延迟事件，而函数节流便会很有规律的每隔一定时间执行一次回调函数。节流和防抖是我们业务场景下进行性能优化非常重要的技能了，具体使用哪种方法实现还是要结合实际业务场景来区分哦。</p>\n</div>\n            </Fragment>\n        )\n    }\n}"],"sourceRoot":""}