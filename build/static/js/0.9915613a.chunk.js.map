{"version":3,"sources":["components/headerLink.tsx","article/ES678新特性.js"],"names":["Main","clickPosBtn","idName","dom","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","headerLink","map","item","index","level","key","onClick","title","React","Component","Template","_this","Object","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5__","_components_headerLink__WEBPACK_IMPORTED_MODULE_7__","id"],"mappings":"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","file":"static/js/0.9915613a.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/components/headerLink.scss\"\nexport default class Main extends React.Component<any, any>{\n    componentDidMount() { }\n\n    clickPosBtn = (idName: string) => {\n        const dom: any = document.getElementById(idName);\n        window.scrollTo({\n            top: dom.offsetTop - 10,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"headerLink\">\n                <div className=\"content\">\n                    <div className=\"real-content\">\n                        <div className='tag'>Reading Assistance ·</div>\n                        {\n                            this.props.headerLink.map((item: any, index: number) => {\n                                return <span className={'a' + item.level} key={index} onClick={() => this.clickPosBtn(item.title)}>{item.title}</span>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Fragment } from 'react'\nimport '../style/main.scss'\nimport HeaderLink from \"../components/headerLink\"\nexport default class Template extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            headerLink: [{\"level\":\"h3\",\"title\":\"箭头函数\"},{\"level\":\"h3\",\"title\":\"rest参数和拓展运算符\"},{\"level\":\"h3\",\"title\":\"对象属性简写\"},{\"level\":\"h3\",\"title\":\"解构赋值\"},{\"level\":\"h3\",\"title\":\"字符串拓展\"},{\"level\":\"h3\",\"title\":\"Symbol类型\"},{\"level\":\"h3\",\"title\":\"数组拓展\"},{\"level\":\"h3\",\"title\":\"正则拓展\"},{\"level\":\"h3\",\"title\":\"函数默认值\"},{\"level\":\"h3\",\"title\":\"Set 和 WeakSet\"},{\"level\":\"h3\",\"title\":\"Map 和 WeakMap\"},{\"level\":\"h3\",\"title\":\"Promise函数\"},{\"level\":\"h3\",\"title\":\"Generators生成器\"},{\"level\":\"h3\",\"title\":\"Iterator遍历器\"},{\"level\":\"h3\",\"title\":\"for...in 与 for...of\"},{\"level\":\"h3\",\"title\":\"Async Await\"},{\"level\":\"h3\",\"title\":\"Class 类\"},{\"level\":\"h3\",\"title\":\"模块\"},{\"level\":\"h3\",\"title\":\"Proxy\"},{\"level\":\"h3\",\"title\":\"Reflect\"},{\"level\":\"h3\",\"title\":\"数学运算符\"},{\"level\":\"h3\",\"title\":\"Object相关API\"},{\"level\":\"h4\",\"title\":\"Objec.values()\"},{\"level\":\"h4\",\"title\":\"Objec.entries()\"},{\"level\":\"h4\",\"title\":\"Objec.getOwnPropertyDescriptors()\"}]\n        }\n    }\n    componentWillMount(){\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n            <Fragment>\n                <HeaderLink headerLink={this.state.headerLink}></HeaderLink>\n                <div className=\"article\">\n<div className=\"title-content\"><h1 className=\"title\">ES6+ 新特性大汇总</h1></div>\n<blockquote>\n  <p>平时写业务涉及到ES6/7/8常用的可能就常见的那几个，其他的不常用就忘记了，所以来专门记录一篇博客，以供经常翻阅之用。</p>\n</blockquote>\n\n<h3 id='箭头函数'>箭头函数</h3>\n\n<ol>\n<li>匿名函数，不能作为构造函数，不能<code>new</code>,也没有<code>prototype</code>属性</li>\n<li>没有<code>arguments</code>,可以使用<code>rest参数</code>作为替代方案</li>\n</ol>\n\n<pre><code><span></span>\n<span>let a=(...arr)=&gt;{'{'}</span>\n<span>    console.log(arr)  // [1,2,3,4]</span>\n<span>}</span>\n<span>a(1,2,3,4)</span>\n<span></span>\n</code></pre>\n\n<ol>\n<li>箭头函数不会创建自己的<code>this</code>,它只会从自己的作用域链的上一层继承<code>this</code></li>\n</ol>\n\n<pre><code><span></span>\n<span>this.a=222</span>\n<span>var obj = {'{'}</span>\n<span>    a: 6,</span>\n<span>    b: function () {'{'}</span>\n<span>        console.log(this);  //obj</span>\n<span>        console.log(this.a);//6</span>\n<span>    },</span>\n<span>    c: () =&gt; {'{'}</span>\n<span>        console.log(this);  //{'{'}}</span>\n<span>        console.log(this.a);//222</span>\n<span>    },</span>\n<span>    d: function () {'{'}</span>\n<span>        setTimeout(() =&gt; {'{'}</span>\n<span>            console.log(this);  //window</span>\n<span>            console.log(this.a);//6</span>\n<span>        }, 100);</span>\n<span>    },</span>\n<span>    e: function () {'{'}</span>\n<span>        setTimeout(function () {'{'}</span>\n<span>            console.log(this);  //timeout</span>\n<span>            console.log(this.a);//undefined</span>\n<span>        }, 100);</span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<ol>\n<li>箭头函数不能当做<code>Generator函数</code>,不能使用<code>yield</code>关键字</li>\n<li>通过<code>call()</code>、<code>apply()</code>调用箭头函数时，只能传递参数，第一个参数会被忽略</li>\n</ol>\n\n<hr />\n\n<h3 id='rest参数和拓展运算符'>rest参数和拓展运算符</h3>\n\n<p>rest参数和拓展运算符虽然都是“...”的形态，但是两者的作用范围却截然不同</p>\n\n<p><strong>rest参数</strong>：Rest就是为解决传入的参数数量不一定,数组的相关的方法都可以用</p>\n\n<pre><code><span></span>\n<span>function realSort(...rest) {'{'}</span>\n<span>    console.log(rest.sort((a,b)=&gt;a-b))</span>\n<span>}</span>\n<span>realSort(1,10,3) // [ 1, 3, 10 ]</span>\n<span></span>\n</code></pre>\n\n<p><strong>拓展运算符</strong>：可以看作是rest参数的逆运算（展开数组操作），将数组转为字符串</p>\n\n<pre><code><span></span>\n<span>console.log(1,2,...[4,5,6],7,8)  // 1 2 4 5 6 7 8</span>\n<span></span>\n</code></pre>\n\n<p>同时，ES2018为对象解构提供了和数组一样的Rest参数和展开操作符：</p>\n\n<pre><code><span></span>\n<span>const obj = {'{'}a:1,b:2,c:3}</span>\n<span>const {'{'}a,...x} = obj</span>\n<span>console.log(x)  // {'{'}b:2,c:3}</span>\n<span></span>\n<span>const obj1 = {'{'} a: 1, b: 2, c: 3 };</span>\n<span>const obj2 = {'{'} ...obj1, d: 4 }; // {'{'} a: 1, b: 2, c: 3, d: 4 };</span>\n<span></span>\n</code></pre>\n\n<hr />\n\n<h3 id='对象属性简写'>对象属性简写</h3>\n\n<p>在ES6中允许我们在设置一个对象的属性的时候不指定属性名。</p>\n\n<pre><code><span></span>\n<span>const name='Ming',age='18',city='Shanghai';</span>\n<span>&lt;!-- 旧方法 --&gt;</span>\n<span>const student = {'{'}</span>\n<span>    name:name,</span>\n<span>    age:age,</span>\n<span>    city:city</span>\n<span>};</span>\n<span></span>\n<span>&lt;!-- ES6写法 --&gt;</span>\n<span>const student = {'{'}</span>\n<span>    name,</span>\n<span>    age,</span>\n<span>    city</span>\n<span>};</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<hr />\n\n<h3 id='解构赋值'>解构赋值</h3>\n\n<p><strong>数组的解构赋值</strong></p>\n\n<pre><code><span></span>\n<span>let [b, c, d] = [1, 2, 3]</span>\n<span>console.log(b, c, d)  //1,2,3</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<p><strong>对象的解构赋值</strong>，对象的解构赋值是根据key值进行匹配，如下代码所示，真正被创建的变量是<code>Name</code>和<code>Age</code></p>\n\n<pre><code><span></span>\n<span>let {'{'} name: Name,age: Age } = {'{'} name:'swr',age:28 }</span>\n<span>console.log(Name) // 'swr'</span>\n<span>console.log(Age) // 28</span>\n<span>console.log(name) // ReferenceError: name is not defined</span>\n<span>console.log(age) // ReferenceError: age is not defined</span>\n<span></span>\n</code></pre>\n\n<p>ES6以后，允许对对象属性简写，所以我们通常直接对变量和key值进行统一，而直接进行简写操作：</p>\n\n<pre><code><span></span>\n<span>let {'{'} name ,age } = {'{'} name:'swr',age:28 }</span>\n<span>console.log(name) // swr</span>\n<span>console.log(age) // 28</span>\n<span>&lt;!-- 等价于 --&gt;</span>\n<span>let {'{'} name: name ,age: age } = {'{'} name:'swr',age:28 }</span>\n<span></span>\n</code></pre>\n\n<p>结构赋值在函数中的应用：</p>\n\n<pre><code><span></span>\n<span>function body({'{'} eye, mouse } = {'{'} eye: 16, mouse: 20 }) {'{'}</span>\n<span>    console.log(eye, mouse);</span>\n<span>}</span>\n<span>body({'{'}eye:10,mouse:10}) //10 10</span>\n<span>body()  //16 20</span>\n<span>body({'{'}eye:10})  //10 undefined</span>\n<span></span>\n</code></pre>\n\n<hr />\n\n<h3 id='字符串拓展'>字符串拓展</h3>\n\n<p><strong>includes</strong><br></br>判断字符串是否有某值</p>\n\n<pre><code><span></span>\n<span>console.log(\"abcd\".includes('a'))   //true</span>\n<span>console.log(\"abcd\".includes('z'))   //false</span>\n<span></span>\n</code></pre>\n\n<p><strong>repeat</strong><br></br>复制字符串</p>\n\n<pre><code><span></span>\n<span>console.log(\"abcd\".repeat(3))   //abcdabcdabcd</span>\n<span></span>\n</code></pre>\n\n<p><strong>padStart() 与 padEnd()</strong></p>\n\n<blockquote>\n  <p><code>String.padStart(targetLength,[padString])</code><br></br><code>String.padEnd(targetLength,padString])</code><br></br><strong>targetLength</strong>:当前字符串需要填充到的目标长度。如果这个数值小于当前字符串的长度，则返回当前字符串本身。<br></br><strong>padString</strong>:(可选) 填充字符串。如果字符串太长，使填充后的字符串长度超过了目标长度，则只保留最左侧的部分，其他部分会被截断，此参数的缺省值为 \" \"；</p>\n</blockquote>\n\n<pre><code><span></span>\n<span>'abc'.padStart(6,'1')   //  \"111abc\"</span>\n<span>'abc'.padStart(3,'1')   //  \"abc\"</span>\n<span>'abc'.padStart(5)       //  \"  abc\"</span>\n<span></span>\n<span>'abc'.padEnd(6,'1')   //  \"abc111\"</span>\n<span>'abc'.padEnd(3,'1')   //  \"abc\"</span>\n<span>'abc'.padEnd(5)       //  \"abc  \"</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<p><strong>trimStart() 和 trimEnd()</strong><br></br>顾名思义，该方法就是去除字符串首/尾空白符。</p>\n\n<pre><code><span></span>\n<span>\" sss \".trim()      // \"sss\"</span>\n<span>\" sss \".trimStart() // \"sss \"</span>\n<span>\" sss \".trimEnd()   // \" sss\"</span>\n<span></span>\n</code></pre>\n\n<hr />\n\n<h3 id='Symbol类型'>Symbol类型</h3>\n\n<p>数据类型<code>symbol</code>是 ES6 新增的一种原始数据类型，一个<code>symbol</code>实例可以被赋值到一个左值变量，还可以通过标识符检查类型，这就是它的全部特性。</p>\n\n<pre><code><span></span>\n<span>var  myPrivateMethod  = Symbol();</span>\n<span>this[myPrivateMethod] = function() {'{'}...};</span>\n<span></span>\n</code></pre>\n\n<p>如果用<code>Symbor.for</code>创建了一个<code>symbol</code>, 下次再用相同的参数来访问，是返回相同的<code>symbol</code>。<code>Symbol.keyFor(sym)</code>方法用来获取<code>symbol</code>注册表中与某个<code>symbol</code>关联的键：</p>\n\n<pre><code><span></span>\n<span>let s1 = Symbol.for(\"111\");</span>\n<span>Symbol.keyFor(s1); // \"111\"</span>\n<span>let s2 = Symbol(\"222\");</span>\n<span>Symbol.keyFor(s2); // undefined</span>\n<span></span>\n</code></pre>\n\n<p>下面来看看如何将<code>Symbol</code>应用于实际业务中：</p>\n\n<ol>\n<li><strong>私有属性</strong>，由于<code>Symbol</code>类型的数据不可枚举，可以在类里模拟私有属性：</li>\n</ol>\n\n<pre><code><span></span>\n<span>var  myPrivateProp  = Symbol();</span>\n<span>class People{'{'}</span>\n<span>    constructor(){'{'}</span>\n<span>        this[myPrivateProp] = 'Secret' // 实例无法读取到该变量，仅可在类里使用</span>\n<span>    }</span>\n<span>    getValue() {'{'}</span>\n<span>        return this[myPrivateProp]</span>\n<span>    }</span>\n<span>    setValue(val) {'{'}</span>\n<span>        return this[myPrivateProp] = val</span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<ol>\n<li><p><strong>避免属性污染</strong>，有时候我们进行 mixin 操作，或对某个对象进行属性添加等情况下，尤其是在协作开发时很有可能会出现属性命名相同而被覆盖的情况，所以将属性名定义为<code>Symbol</code>类型可以有效避免这些情况的发生</p></li>\n<li><p><strong>防止<code>XSS</code></strong>，原理是<code>JSON</code>中不能存储<code>Symbol</code>对象</p></li>\n</ol>\n\n<h3 id='数组拓展'>数组拓展</h3>\n\n<p><strong>includes</strong><br></br>判断数组中是否有某值,功能和 indexOf() 类似。</p>\n\n<pre><code><span></span>\n<span>let arr = ['react', 'angular', 'vue'];</span>\n<span>arr.includes('react') // true</span>\n<span>arr.includes('jquery') // false</span>\n<span></span>\n<span>arr.indexOf('react') // 0</span>\n<span>arr.indexOf('jquery') // -1</span>\n<span></span>\n</code></pre>\n\n<p><strong>flat</strong><br></br><code>flat()</code> 方法会按照一个可指定的深度递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回。<br></br>主要用途：数组降维、去除空项</p>\n\n<pre><code><span></span>\n<span>var arr1 = [1, 2, [3, [4, 5]];</span>\n<span>arr1.flat();    // [1, 2, 3, [4, 5]]</span>\n<span>arr1.flat(2);    // [1, 2, 3, 4, 5]</span>\n<span></span>\n<span>var arr2 = [1,,3,4,5]</span>\n<span>arr2.flat();    // [1,3,4,5]</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<hr />\n\n<h3 id='正则拓展'>正则拓展</h3>\n\n<p><strong>命名捕获</strong><br></br>ES2018允许命名捕获组使用符号<code>?&lt;name&gt;</code>，在打开捕获括号(后立即命名</p>\n\n<pre><code><span></span>\n<span>var reDate = /(?&lt;year&gt;[0-9]{'{'}4})-(?&lt;month&gt;[0-9]{'{'}2})-(?&lt;day&gt;[0-9]{'{'}2})/</span>\n<span>var match = reDate.exec(reDate)</span>\n<span>console.log(match.groups)  // {'{'}year: \"2018\", month: \"04\", day: \"30\"}</span>\n<span></span>\n</code></pre>\n\n<p><strong>dotAll模式</strong><br></br>正则表达式中点.匹配除回车外的任何单字符，标记s改变这种行为，允许行终止符的出现</p>\n\n<pre><code><span></span>\n<span>/hello.world/.test('hello\\nworld');  // false</span>\n<span>/hello.world/s.test('hello\\nworld'); // true</span>\n<span></span>\n</code></pre>\n\n<hr />\n\n<h3 id='函数默认值'>函数默认值</h3>\n\n<p>函数可以在定义的时候为参数设置默认值</p>\n\n<pre><code><span></span>\n<span>function foo(height = 50, color = 'red'){'{'}</span>\n<span>    // ...</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p>过去我们实现类似的功能需要如下的办法：</p>\n\n<pre><code><span></span>\n<span>function foo(height, color){'{'}</span>\n<span>    var height = height || 50;</span>\n<span>    var color = color || 'red';</span>\n<span>    //...</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<h3 id='Set 和 WeakSet'>Set 和 WeakSet</h3>\n\n<p>Set(集合) ES6 新增的一种新的数据结构，类似于数组，但成员是唯一且无序的，没有重复的值。Set 本身是一种构造函数，用来生成 Set 数据结构。<br></br>举个例子，用 Set 来实现数组去重：</p>\n\n<pre><code><span></span>\n<span>// 去重数组的重复对象</span>\n<span>let arr = [1, 2, 3, 2, 1, 1]</span>\n<span>[... new Set(arr)]  // [1, 2, 3]</span>\n<span></span>\n</code></pre>\n\n<p>Set 对象允许你储存任何类型的唯一值，无论是原始值或者是对象引用,但是 WeakSet 对象允许你将弱引用对象储存在一个集合中。WeakSet 对象中储存的对象值都是被弱引用的，即垃圾回收机制不考虑 WeakSet 对该对象的应用，如果没有其他的变量或属性引用这个对象值，则这个对象将会被垃圾回收掉</p>\n\n<h3 id='Map 和 WeakMap'>Map 和 WeakMap</h3>\n\n<p>Map(字典) 在 JavaScript 中是一个非常必须的数据结构。和set结构的区别是：集合 是以 [value, value]的形式储存元素，字典 是以 [key, value] 的形式储存。</p>\n\n<p>Objects 和 Maps 类似的是，它们都允许你按键存取一个值、删除键、检测一个键是否绑定了值。因此（并且也没有其他内建的替代方式了）过去我们一直都把对象当成 Maps 使用。不过 Maps 和 Objects 有一些重要的区别，在下列情况里使用 Map 会是更好的选择：</p>\n\n<ul>\n<li>一个Object的键只能是字符串或者 Symbols，但一个 Map 的键可以是任意值，包括函数、对象、基本类型。</li>\n<li>Map 中的键值是有序的，而添加到对象中的键则不是。因此，当对它进行遍历时，Map 对象是按插入的顺序返回键值。</li>\n<li>你可以通过 size 属性直接获取一个 Map 的键值对个数，而 Object 的键值对个数只能手动计算。</li>\n<li>Map 可直接进行迭代，而 Object 的迭代需要先获取它的键数组，然后再进行迭代。</li>\n<li>Object 都有自己的原型，原型链上的键名有可能和你自己在对象上的设置的键名产生冲突。</li>\n<li>Map 在涉及频繁增删键值对的场景下会有些性能优势。</li>\n</ul>\n\n<pre><code><span></span>\n<span>let map2=new Map([['name','danny'],[true,false]])</span>\n<span>map2.set('key','666')</span>\n<span>console.log(map2.size)  //3</span>\n<span></span>\n</code></pre>\n\n<p>WeakMap 的 key 只能是 Object 类型。原始类型不能作为key值,在原生的WeakMap中,每个键对自己所引用对象的引用是 \"弱引用\",这意味着,如果没有其他引用和该键引用同一个对象,这个对象将会被当作垃圾回收，即不会发生内存泄漏问题。</p>\n\n<pre><code><span></span>\n<span>var wm1 = new WeakMap();</span>\n<span>wm1.set({'{'}}, 37);</span>\n<span></span>\n</code></pre>\n\n<hr />\n\n<h3 id='Promise函数'>Promise函数</h3>\n\n<table><tbody><tr><th> 方法 </th><th>  结果</th></tr><tr><td> Promise.all </td><td>  返回一个promise对象，有一个reject就返回reject</td></tr><tr><td> Promise.race </td><td>  返回一个promise对象，回调最先解析出的结果 </td></tr><tr><td> Promise.reject </td><td>  返回一个带有拒绝原因reason参数的Promise对象</td></tr><tr><td> Promise.resolve </td><td>  返回一个以给定值解析后的Promise对象</td></tr></tbody></table>\n\n<p><strong>finally</strong> <br></br>在某些情况，不管成功还是失败都要执行相同的代码，则可以把逻辑写进 <code>.finally()</code> 中。</p>\n\n<pre><code><span></span>\n<span>function doSomething() {'{'}</span>\n<span>  doSomething1()</span>\n<span>  .then(doSomething2)</span>\n<span>  .then(doSomething3)</span>\n<span>  .catch(err =&gt; {'{'}</span>\n<span>    console.log(err);</span>\n<span>  })</span>\n<span>  .finally(() =&gt; {'{'}</span>\n<span>    // finish here!</span>\n<span>  });</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<blockquote>\n  <p><strong>Tips</strong><br></br>promise有三种状态: fulfilled(操作成功完成), rejected(操作失败), pending(初始状态)<br></br>Promise解决了层层回调函数的问题</p>\n</blockquote>\n\n<hr />\n\n<h3 id='Generators生成器'>Generators生成器</h3>\n\n<p>就像 Promises 可以帮我们避免回调地狱，Generators 可以帮助我们让代码风格更整洁－－用同步的代码风格来写异步代码，它本质上是一个可以暂停计算并且可以随后返回表达式的值的函数。</p>\n\n<pre><code><span></span>\n<span>function* gen(){'{'}</span>\n<span>    yield 1</span>\n<span>    yield 2</span>\n<span>    yield 3 </span>\n<span>    return 4</span>\n<span>}</span>\n<span></span>\n<span>let g=gen()</span>\n<span></span>\n<span>console.log(g.next())  // {'{'}value: 1, done: false}</span>\n<span>console.log(g.next())  // {'{'}value: 2, done: false}</span>\n<span>console.log(g.next())  // {'{'}value: 3, done: false}</span>\n<span>console.log(g.next())  // {'{'}value: 4, done: true}</span>\n<span></span>\n</code></pre>\n\n<p>Generator 提供的 API：<br></br>Generator.prototype.next()  // 返回一个由 yield表达式生成的值，例如: {'{'}value: 0, done: false}<br></br>Generator.prototype.return()  // 返回给定的生成器，并结束生成器<br></br>Generator.prototype.throw() //  向生成器抛出一个错误</p>\n\n<p>除此之外，Generator 函数的next()方法还接受参数，这是向 Generator 函数体内输入数据：</p>\n\n<pre><code><span></span>\n<span>function* gen(x) {'{'}</span>\n<span>    yield yield x ? x : 0 + 2;</span>\n<span>}</span>\n<span>var g = gen();</span>\n<span>console.log(g.next())  // {'{'} value: 2, done: false }</span>\n<span>console.log(g.next(1))  // {'{'} value: 1, done: false }</span>\n<span></span>\n</code></pre>\n\n<p>上面的第二次方法中,第二次 <code>g.next(1)</code>,将 1 作为结果返回。</p>\n\n<hr />\n\n<h3 id='Iterator遍历器'>Iterator遍历器</h3>\n\n<blockquote>\n  <p>iterator 为每一个对象定义了默认的迭代器。该迭代器可以被 for...of 循环使用。一些内置类型 Array、String、 Map、 Set 、 TypedArray 拥有默认的迭代器行为，其他类型则没有。</p>\n</blockquote>\n\n<p>凡是部署了Symbol.iterator属性的数据结构，就称为部署了遍历器接口。调用这个接口，就会返回一个遍历器对象。</p>\n\n<p>有一些场合会默认调用Iterator接口（即Symbol.iterator方法），除了<code>for...of循环</code>，还有几个别的场合:<code>解构赋值</code>,<code>扩展运算符(...)</code>,<code>yield*_yield*</code>后面跟的是一个可遍历的结构，它会调用该结构的遍历器接口,由于数组的遍历会调用遍历器接口，所以任何接受数组作为参数的场合都会调用。</p>\n\n<pre><code><span></span>\n<span>var arr = ['w', 'y', 'k', 'o', 'p'];</span>\n<span>var eArr = arr[Symbol.iterator]();</span>\n<span>// 您的浏览器必须支持for...of循环</span>\n<span>// 以及let —— 将变量作用域限定在 for 循环中</span>\n<span>for (let letter of eArr) {'{'}</span>\n<span>  console.log(letter); </span>\n<span>}</span>\n<span>// 或者这样调用：</span>\n<span>console.log(eArr.next().value); // w</span>\n<span></span>\n</code></pre>\n\n<pre><code><span></span>\n<span>var myIterable = {'{'}}</span>\n<span>myIterable[Symbol.iterator] = function* () {'{'}</span>\n<span>    yield 1;</span>\n<span>    yield 2;</span>\n<span>    yield 3;</span>\n<span>};</span>\n<span>[...myIterable] // [1, 2, 3]</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<h3 id='for...in 与 for...of'>for...in 与 for...of</h3>\n\n<p>无论是 <code>for...in</code> 还是 <code>for...of</code> 语句都是迭代一些东西。它们之间的主要区别在于它们的迭代方式:</p>\n\n<ul>\n<li><code>for...in</code> 语句以原始插入顺序迭代对象的可枚举属性，注意它也会遍历原型链的可枚举属性，如果只想遍历对象本身需要配合 <code>hasOwnProperty</code> 使用</li>\n<li><code>for...of</code> 遍历可迭代对象（包括 Array，Map，Set，String，TypedArray，arguments 对象等等）定义要迭代的数据，如果其他类型数据想变成可迭代对象需要在其自身或原型链上定义<code>Symbol.iterator</code>属性</li>\n</ul>\n\n<pre><code><span></span>\n<span>let obj = {'{'}</span>\n<span>    name: 'Dinosaur',</span>\n<span>    age: 23</span>\n<span>}</span>\n<span>// 将 obj 变成可迭代对象</span>\n<span>obj[Symbol.iterator] = function () {'{'}</span>\n<span>    let keys = Object.keys(this);</span>\n<span>    let index = 0;</span>\n<span>    return {'{'}</span>\n<span>        next: () =&gt; {'{'}</span>\n<span>            return {'{'} value: this[keys[index++]], done: index &gt; keys.length };</span>\n<span>        }</span>\n<span>    }</span>\n<span>}</span>\n<span>for (let value of obj) {'{'}</span>\n<span>    console.log(value) // Dinosaur 23</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<h3 id='Async Await'>Async Await</h3>\n\n<pre><code><span></span>\n<span>function getJSON(url) {'{'}</span>\n<span>  return new Promise(function(resolve, reject) {'{'}</span>\n<span>    request(url, function(error, response, body) {'{'}</span>\n<span>      resolve(body);</span>\n<span>    });</span>\n<span>  });</span>\n<span>}</span>\n<span></span>\n<span>async function main() {'{'}</span>\n<span>  var data = await getJSON();</span>\n<span>  console.log(data); // NOT undefined!</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p>ES2018引入异步迭代器（asynchronous iterators），这就像常规迭代器，除了next()方法返回一个Promise。因此await可以和for...of循环一起使用，以串行的方式运行异步操作。</p>\n\n<pre><code><span></span>\n<span>async function process(array) {'{'}</span>\n<span>  for await (let i of array) {'{'}</span>\n<span>    doSomething(i);</span>\n<span>  }</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<hr />\n\n<h3 id='Class 类'>Class 类</h3>\n\n<p>JavaScript是没有类的概念的，ES6的类只不过是在原先的基础上坐了一层语法糖，看起来更像Java等语言的class</p>\n\n<pre><code><span></span>\n<span>class Personal extends Person {'{'}</span>\n<span>    constructor(name, age, gender, occupation, hobby) {'{'}</span>\n<span>        super(name, age, gender);</span>\n<span>        this.occupation = occupation;</span>\n<span>        this.hobby = hobby;</span>\n<span>    }</span>\n<span></span>\n<span>    incrementAge() {'{'}</span>\n<span>        super.incrementAge();</span>\n<span>        this.age += 20;</span>\n<span>        console.log(this.age);</span>\n<span>    }</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p>ES6Class 特性：<br></br>1. 内部所有属性都是不可枚举的;<br></br>2. 必须通过 new 操作来调用;<br></br>3. 不存在变量提升;<br></br>4. 默认为严格模式;<br></br>5. 子类必须在父类的构造函数中调用 super(),这样才能有 this 对象;</p>\n\n<hr />\n\n<h3 id='模块'>模块</h3>\n\n<p>经常谈起模块化主要几种：AMD、CMD、CommonJS以及ES6模块，AMD具体实现是require.js，CMD是sea.js,但是随着前端的工程化发展，这两款在业务开发上已经渐渐退去热度。CommonJS在nodejs服务器段开发下经常被用到，至于ES6模块化也在ES6的普及下渐渐有了起色。</p>\n\n<p><strong>CommonJS规范</strong>：使用require引入模块，使用exports导出模块</p>\n\n<pre><code><span></span>\n<span>//导出</span>\n<span>exports.getInfo=function(){'{'}</span>\n<span>    console.log('Hello World!')</span>\n<span>}</span>\n<span></span>\n<span>//引入</span>\n<span>var getInfo=require('./getInfo.js').getInfo</span>\n<span></span>\n</code></pre>\n\n<p><strong>ES6 module</strong>:使用import引入模块,使用export导出模块</p>\n\n<pre><code><span></span>\n<span>//导出</span>\n<span>function getInfo(){'{'}</span>\n<span>    console.log('Hello World!')</span>\n<span>}</span>\n<span>var name = '666';</span>\n<span></span>\n<span>export getInfo;</span>\n<span>export default getInfo;</span>\n<span>export {'{'}getInfo,name};</span>\n<span></span>\n<span>//引入</span>\n<span>import a from './getInfo.js'</span>\n<span>import * as a from './getInfo.js' </span>\n<span>import {'{'} a } from './getInfo.js'</span>\n<span></span>\n</code></pre>\n\n<p>两者区别：require使用非常简单，它相当于module.exports的传送门，module.exports后面的内容是什么，require的结果就是什么，require运行的结果可以直接赋值给变量，但是import则非常严格，必须是放在文件的开头，而且格式确定，并且不会运行引入的模块，只是将其进行编译。</p>\n\n<hr />\n\n<h3 id='Proxy'>Proxy</h3>\n\n<p>基本用法：</p>\n\n<pre><code><span></span>\n<span>let pro = new Proxy(target,handler);</span>\n<span>// target 表示所要拦截的目标对象</span>\n<span>// handler 也是一个对象，用来定制拦截行为</span>\n<span></span>\n</code></pre>\n\n<p>看个例子：</p>\n\n<pre><code><span></span>\n<span>let person = {'{'}</span>\n<span>    name: \"赵云\",</span>\n<span>    age: 25</span>\n<span>}</span>\n<span></span>\n<span>let handler = {'{'}</span>\n<span>    // 读取对象时，进行 get 操作</span>\n<span>    get: (target, propKey, receiver) =&gt; {'{'}</span>\n<span>        return `我的名字叫：${'{'}target[propKey]}`</span>\n<span>    },</span>\n<span>    // 给对象赋值时，执行 set 操作</span>\n<span>    set: (target, propKey, value, receiver) =&gt; {'{'}</span>\n<span>        target[propKey] = `set(${'{'}value})`</span>\n<span>        return true</span>\n<span>    }</span>\n<span></span>\n<span>}</span>\n<span>let personProxy = new Proxy(person, handler);</span>\n<span></span>\n<span>console.log(personProxy.name);// 我的名字叫：赵云</span>\n<span>personProxy.name = \"黄忠\";</span>\n<span>console.log(personProxy.name);// 我的名字叫：set(黄忠)</span>\n<span></span>\n</code></pre>\n\n<h3 id='Reflect'>Reflect</h3>\n\n<p>Reflect 是一个内置的对象，它提供拦截 JavaScript 操作的方法。Reflect 没有构造函数，不能 new 使用。</p>\n\n<p>Reflect 提供13种静态方法:</p>\n\n<p>Reflect.apply(target, thisArg, args)<br></br>Reflect.construct(target, args)<br></br>Reflect.get(target, name, receiver)<br></br>Reflect.set(target, name, value, receiver)<br></br>Reflect.defineProperty(target, name, desc)<br></br>Reflect.deleteProperty(target, name)<br></br>Reflect.has(target, name)<br></br>Reflect.ownKeys(target)<br></br>Reflect.isExtensible(target)<br></br>Reflect.preventExtensions(target)<br></br>Reflect.getOwnPropertyDescriptor(target, name)<br></br>Reflect.getPrototypeOf(target)<br></br>Reflect.setPrototypeOf(target, prototype)</p>\n\n<p>下面几个例子来解释 Reflect 相较于 Object对象的优点：</p>\n\n<p>1.Reflect 让Object操作变成函数行为</p>\n\n<pre><code><span></span>\n<span>let cat = {'{'} name: 'ketty', age: 18 }</span>\n<span>console.log('name' in cat);// --&gt; true </span>\n<span>console.log(Reflect.has(cat,'name'));// --&gt; true</span>\n<span></span>\n</code></pre>\n\n<p>2.Reflect(target, name, property) 返回布尔类型，语义化更佳</p>\n\n<pre><code><span></span>\n<span>//Object对象方法</span>\n<span>try {'{'}</span>\n<span>  Object.defineProperty(target, name, property);</span>\n<span>} catch (e) {'{'}</span>\n<span>  console.log(\"error\");</span>\n<span>}</span>\n<span>//Reflect对象方法</span>\n<span>if (Reflect(target, name, property)) {'{'}</span>\n<span>  console.log(\"success\");</span>\n<span>} else {'{'}</span>\n<span>  console.log(\"error\");</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p>3.Reflect对象的操作和Proxy对象的操作一一对应，在Proxy的拦截操作中，可以直接利用Reflect对象直接获取Proxy的默认值。</p>\n\n<pre><code><span></span>\n<span>let person = {'{'}</span>\n<span>    name: \"赵云\",</span>\n<span>    age: 25</span>\n<span>}</span>\n<span></span>\n<span>let handler = {'{'}</span>\n<span>  // 读取对象时，进行 get 操作</span>\n<span>  get: (target, propKey, receiver) =&gt; {'{'}</span>\n<span>      return Reflect.get(target, propKey, receiver)</span>\n<span>  }</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<hr />\n\n<h3 id='数学运算符'>数学运算符</h3>\n\n<p><code>a ** b</code> <strong>指数运算符</strong>，它与 <code>Math.pow(a, b)</code> 相同。</p>\n\n<pre><code><span></span>\n<span>2 ** 3 // 8</span>\n<span></span>\n</code></pre>\n\n<hr />\n\n<h3 id='Object相关API'>Object相关API</h3>\n\n<h4 id='Objec.values()'>Objec.values()</h4>\n\n<p><code>Object.values()</code>是一个与<code>Object.keys()</code>类似的新函数，返回的是Object自身属性的所有值而不是键值，不包括继承的值。</p>\n\n<pre><code><span></span>\n<span>let arr3 = {'{'}1:'a',2:'b',3:'c'}</span>\n<span>Object.values(arr3)    // [\"a\", \"b\", \"c\"]</span>\n<span>Object.keys(arr3)   // [\"1\", \"2\", \"3\"]</span>\n<span></span>\n</code></pre>\n\n<h4 id='Objec.entries()'>Objec.entries()</h4>\n\n<p><code>Object.entries()</code>函数返回一个给定对象自身可枚举属性的键值对的数组。</p>\n\n<pre><code><span></span>\n<span>let arr3 = {'{'}1:'a',2:'b',3:'c'}</span>\n<span>Object.entries(arrs);  // [[\"1\", \"a\"],[\"2\", \"b\"],[\"3\", \"c\"]]</span>\n<span></span>\n</code></pre>\n\n<h4 id='Objec.getOwnPropertyDescriptors()'>Objec.getOwnPropertyDescriptors()</h4>\n\n<p><code>Object.getOwnPropertyDescriptors()</code>函数用来获取一个对象的所有自身属性的描述符,如果没有任何自身属性，则返回空对象。</p>\n\n<pre><code><span></span>\n<span>const obj = {'{'}</span>\n<span>    name: 'Dinosaur',</span>\n<span>    get age() {'{'} return '23' }</span>\n<span>};</span>\n<span>Object.getOwnPropertyDescriptors(obj)</span>\n<span>// {'{'}</span>\n<span>//   age: {'{'}</span>\n<span>//     configurable: true,</span>\n<span>//     enumerable: true,</span>\n<span>//     get: function age(){'{'}}, //the getter function</span>\n<span>//     set: undefined</span>\n<span>//   },</span>\n<span>//   name: {'{'}</span>\n<span>//     configurable: true,</span>\n<span>//     enumerable: true,</span>\n<span>//      value:\"Jine\",</span>\n<span>//      writable:true</span>\n<span>//   }</span>\n<span>// }</span>\n<span></span>\n</code></pre>\n\n<hr />\n</div>\n            </Fragment>\n        )\n    }\n}"],"sourceRoot":""}