{"version":3,"sources":["components/headerLink.tsx","article/flex布局在IE10和IE11下的坑.js"],"names":["Main","clickPosBtn","idName","dom","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","headerLink","map","item","index","level","key","onClick","title","React","Component","Template","_this","Object","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_honghuidu_homework_dinosaur_blog_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5__","_components_headerLink__WEBPACK_IMPORTED_MODULE_7__"],"mappings":"kLAEqBA,qNAGjBC,YAAc,SAACC,GACX,IAAMC,EAAWC,SAASC,eAAeH,GACzCI,OAAOC,SAAS,CACZC,IAAKL,EAAIM,UAAY,GACrBC,KAAM,EACNC,SAAU,iIAIT,IAAAC,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,2BAEIJ,KAAKK,MAAMC,WAAWC,IAAI,SAACC,EAAWC,GAClC,OAAOR,EAAAC,EAAAC,cAAA,QAAMC,UAAW,IAAMI,EAAKE,MAAOC,IAAKF,EAAOG,QAAS,kBAAMb,EAAKX,YAAYoB,EAAKK,SAASL,EAAKK,mBApBvGC,IAAMC,wLCCnBC,cACjB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAlB,KAAAgB,IACVC,EAAAC,OAAAE,EAAA,EAAAF,CAAAlB,KAAAkB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAtB,QACKuB,MAAQ,CACTjB,WAAY,IAHNW,mKAWV,OACIhB,EAAAC,EAAAC,cAACqB,EAAA,SAAD,KACIvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYnB,WAAYN,KAAKuB,MAAMjB,aACnCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAC/BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAgBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,6EAC/BH,EAAAC,EAAAC,cAAA,wpCAUAF,EAAAC,EAAAC,cAAA,0EAAiEF,EAAAC,EAAAC,cAAA,WAAjE,gCAAuGF,EAAAC,EAAAC,cAAA,WAAvG,iEAA8KF,EAAAC,EAAAC,cAAA,WAA9K,gDAAoOF,EAAAC,EAAAC,cAAA,WAApO,yDAAmSF,EAAAC,EAAAC,cAAA,WAAnS,0DAEAF,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAAA,2PADA,oHAIAF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,6UACAF,EAAAC,EAAAC,cAAA,oSACAF,EAAAC,EAAAC,cAAA,ofACAF,EAAAC,EAAAC,cAAA,mgBACAF,EAAAC,EAAAC,cAAA,4cAEAF,EAAAC,EAAAC,cAAA,6TAxCsCW,IAAMC","file":"static/js/15.e49c6fc4.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/components/headerLink.scss\"\nexport default class Main extends React.Component<any, any>{\n    componentDidMount() { }\n\n    clickPosBtn = (idName: string) => {\n        const dom: any = document.getElementById(idName);\n        window.scrollTo({\n            top: dom.offsetTop - 10,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"headerLink\">\n                <div className=\"content\">\n                    <div className=\"real-content\">\n                        <div className='tag'>Reading Assistance ·</div>\n                        {\n                            this.props.headerLink.map((item: any, index: number) => {\n                                return <span className={'a' + item.level} key={index} onClick={() => this.clickPosBtn(item.title)}>{item.title}</span>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Fragment } from 'react'\nimport '../style/main.scss'\nimport HeaderLink from \"../components/headerLink\"\nexport default class Template extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            headerLink: []\n        }\n    }\n    componentWillMount(){\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n            <Fragment>\n                <HeaderLink headerLink={this.state.headerLink}></HeaderLink>\n                <div className=\"article\">\n<div className=\"title-content\"><h1 className=\"title\">爬一下flex布局在IE10和IE11下的坑</h1></div>\n<p>\n接收项目的时候兼容性暂且到 IE11+ ，但是随着项目的迭代和用户数量的增长，需要兼容到 IE10+。所以在IE10下出现了一些错乱的样式。经过查找发现大部分都是 flex布局导致的。\n\n细思一下，flex在 IE10+是部分支持的，并不是完全不兼容。那问题出在哪了呢？\n\n查找之后发现，之前写样式的同事可能是对于 flex 布局的不理解，出现了大量的 flex:1语法，甚至还有 flex:2的“骚操作”。\n\n那究其根本，新的规范更改了flex的默认值，而IE10，11依旧沿用旧的默认语法。如下表：\n</p>\n\n<p>| Declaration | What it should mean | What it means in IE 10 |<br></br>| ------   | -----   | ---- |<br></br>| (no flex declaration) | flex: 0 1 auto    | flex: 0 0 auto |<br></br>| flex: 1   | flex: 1 1 0%  | flex: 1 0 0px |<br></br>| flex: auto    | flex: 1 1 auto    | flex: 1 0 auto |<br></br>| flex: initial | flex: 0 1 auto    | flex: 0 0 auto |</p>\n\n<p>\n<b>所以，为了兼容IE10,我们尽量不要为了图省事而用简写的格式，而是统一的用 flex: 0 1 auto; 的格式。</b>\n\n这里呢，同时总结一下其他的一些 flex的坑：\n<ol>\n<li>flex 容器如果设置竖排，并且垂直居中，flex子项目的文字会溢出容器。解决办法是给子项目设置一个 max-width:100%。Edge修复了这个bug。</li>\n<li>简写的flex属性，第三个参数 flex-basis 的值如果不写单位，在IE10,11下会该 flex 被忽略。比如 flex: 0 1 0%; 这个百分号不能省略</li>\n<li>竖排弹性容器下，如果子项宽度大于容器宽度，子项并不会随着容器保持宽高比例。解决办法是给这个子项再包裹一个容器，这样子项就不再是一个伸缩项目，尺寸上就可以正常缩放。</li>\n<li>flex-basis如果有一个明确的值，既除了auto以外的值，那么该项目就相当于有一个明确的宽度/高度，占据固定空间。在IE10/11下，盒子内容的宽度是 flex-basis 设置的具体的宽度，它会无视我们设置的 box-sizing:border-box;</li>\n<li>IE10、11: 内联元素不能作为弹性伸缩项目，包括:before 和 ::after 这些伪类元素。IE11修复了这个bug，但是 :before 和 ::after 仍然不能作为伸缩弹性项目。\n解决办法是给内联元素加个 display: block; 即可。</li>\n<li>给flex简写加  !important，在IE10，只对前两个参数有效，第三个参数无效。这个bug在IE11修复。而在IE10，再单独写上flex-bsis即可：</li>\n</ol>\n</p>\n</div>\n            </Fragment>\n        )\n    }\n}"],"sourceRoot":""}